{"version":3,"sources":["assets/app-icon.png","assets/logo.svg","assets/delete-icon.svg","assets/home-picture.svg","assets/white-logo.svg","assets/jamboWorld.svg","assets/icon-feedback.svg","assets/icon-setup-surveys.svg","assets/icon-create-query.svg","assets/sms-illust.svg","assets/icon-send-bulk.svg","assets/icon-send-personalized.svg","assets/icon-two-way-com.svg","assets/video-icon.svg","assets/best-rates-icon.svg","assets/flexible-rates-icon.svg","assets/user-experience-icon.svg","assets/about-us-image.svg","assets/world-icon.svg","assets/phone-icon.svg","assets/like-button.svg","assets/loud-horn.svg","assets/send.svg","assets/messages-icon.svg","assets/location-map.svg","assets/login-person.svg","assets/login-flower.svg","assets/group-icon.svg","assets/gold.svg","assets/silver.svg","assets/bronze.svg","components/footer/index.js","components/productsPages/ussd.js","components/productsPages/bulksms.js","components/landing-page/index.js","components/forms/validation.js","services/baseURL.js","redux/reducer/dashboardReducer.js","redux/constant/actionTypes.js","redux/reducer/sendReducer.js","redux/reducer/index.js","services/urls.js","services/groupsServices.js","redux/action-creator/index.js","redux/middleware/dashboardSaga.js","services/messageServices.js","redux/middleware/sendSaga.js","redux/middleware/index.js","redux/store/store.js","services/utils.js","components/forms/rechargeForm.js","services/authServices.js","views/auth/registerForm.js","views/auth/loginForm.js","views/auth/index.js","components/hamberger/index.js","views/homepage/index.js","components/forms/groupsForms/newMemberForm.js","components/forms/groupsForms/newGroupForm.js","components/groups/GroupSection.js","components/groups/upload.js","components/groups/index.js","components/forms/sendForms/createTemplateForm.js","components/forms/sendForms/templateButtons.js","components/forms/sendForms/sendSMSForms.js","components/forms/sendForms/sendEmailForm.js","components/forms/sendForms/sendForm.js","components/send/index.js","services/paymentServices.js","components/recharge/index.js","views/dashboard/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","footer","class","style","backgroundColor","className","id","src","logo","alt","href","target","aria-hidden","color","textAlign","styles","jamboWorldSvg","backgroundImage","feedbackSvg","setupSurveySvg","createQuerySvg","appIcon","ussdProductPage","top","right","bulkSmsSvg","sendBulkSvg","sendPersonalizedSvg","twoWayComSvg","bulkSmsProductPage","schedule","autoResponse","deliveryReport","realTime","LandingPage","props","routeToRegister","homePicture","onClick","videoIcon","bestRatesIcon","flexibleRatesIcon","userExperienceIcon","aboutUsImage","backgroundPosition","backgroundRepeat","backgroundSize","gutter","phoneIcon","loudHornIcon","sendIcon","messagesIcon","likeButton","worldIcon","locationMap","yupRegObj","Yup","groupName","required","description","firstName","secondName","phoneNumber","fullname","max","min","email","county","company","phone","password","confirmPassword","oneOf","yupLoginObj","receipients","groups","message","resolve_base_url","initialState","emailGroups","smsGroups","activeGroupMembers","isSessionExpired","dashBoardStoreState","state","action","type","emails","sms","currentMessages","sendStoreState","rootReducer","combineReducers","dashboardStoreState","createUrlMappingObject","defaultUrl","this","groupsUrlMappingObject","baseUrl","messageUrlMappingObject","templatesURL","singleGroupURL","baseURL","createSingleObjectActionUrlFunction","groupMembersCsvUrlMappingObject","newgroupMemberMappingObject","ratesUrl","payMpesaUrl","publicKeyUrl","GroupsService","mode","url","axios","get","requestHeaderDetails","response","console","log","checkSessionStatus","newGroup","name","post","notificationHandler","data","newMember","requestData","group","first_name","last_name","csvData","formData","params","member_list","delete","groupMember","member","put","edittedMember","members","fetchGroupMembers","changeSessionStatus","fetchSMSGroupsWatcher","fetchSMSGroupsSaga","fetchEmailGroupsWatcher","fetchEmailGroupsSaga","fetchGroupMembersSagaWatcher","fetchGroupMembersSaga","takeLatest","call","groupsService","fetchGroups","fetchAllGroupMembers","groupMembers","MessageService","messageDetails","recepients","subject","detail","status","templateData","sent","fetchSMSHistoryWatcher","fetchSMSSaga","fetchEmailHistoryWatcher","fetchEmailSaga","messageServices","fetchMessages","results","rootSaga","all","sagaMiddleware","createSagaMiddleware","middleware","composeWithDevTools","applyMiddleware","store","createStore","run","localStorage","window","accessToken","JSON","parse","getItem","access","headers","Authorization","fireNotification","notification","encryptData","publicKey","string","encrypted","forge","pki","publicKeyFromPem","encrypt","md","sha256","create","mgf1","util","encode64","Swal","fire","title","text","icon","confirmButtonText","onClose","dispatch","String","format","s","arguments","i","length","reg","RegExp","replace","amount","refNo","element","eventName","eventHandler","AuthService","userDetails","full_name","confirmed_password","newUser","then","catch","error","RegisterForm","changeAuthActiveState","useState","loaderVisibility","changeLoaderVisibility","formik","useFormik","initialValues","validationSchema","onSubmit","values","a","registerUser","non_field_errors","Object","keys","allErrors","concatErrorString","join","autoComplete","handleSubmit","touched","errors","getFieldProps","visibility","height","width","LoginForm","history","useHistory","loginUser","setItem","stringify","fetchProfile","res","push","position","zIndex","Auth","loginActive","setState","loginPerson","loginFlower","Component","Hamberger","offClick","event","menu","document","getElementsByClassName","classList","toggle","removeEventListener","parentElement","contains","addEventListener","navItemStyle","fontWeight","cursor","borderRadius","Homepage","activeComponent","renderActiveComponent","onhover","e","onMouseLeave","background","componentHandler","upgradeDom","onMouseOver","smooth","to","display","textTransform","for","layout","labelCol","span","wrapperCol","offset","tailLayout","SMSContactItem","Item","label","rules","validator","rule","value","match","Promise","resolve","reject","addonBefore","placeholder","EmailContactItem","NewMemberForm","Form","useForm","form","onFinish","onFinishFailed","remember","resetFields","htmlType","NewGroupForm","Search","Input","groupIconStyle","groupNameStyle","deleteIconStyle","GroupsTable","filteredGroups","columns","parentComponentObject","dataSource","rowClassName","record","index","activeGroupIndex","onRow","rowIndex","DeleteButton","itemId","deleteFunction","updateGroups","deleteItem","deleteIcon","mapDispatchToProps","connect","map","memberNo","setGroups","addGroupVisible","showAddGroupModal","GroupService","postNewGroup","getCurrentGroupsFunc","fetchCurrentGroupsFunc","dataIndex","render","groupIcon","key","itemCategory","deleteGroup","onChange","preventDefault","filter","eachGroup","toLowerCase","includes","UsergroupAddOutlined","size","visible","onOk","handleOk","onCancel","validFileExtensions","vaildateCsvOrXlsFile","file","fileList","extension","split","pop","UploadGroupsCsv","getCurrentGroup","properties","beforeUpload","info","success","block","FileAddOutlined","paddingTop","TabPane","Tabs","Title","Typography","Groups","searching","groupActiveSms","contactTitle","currentGroups","selectedRowKeys","onFinishGroupMember","getCurrentGroups","postNewMember","onFinishGroupMemberFailed","errorInfo","openNotificationWithIcon","changeModalState","formId","querySelector","showModal","fetchSMSGroups","fetchEmailGroups","onTabSwitch","activeKey","onCheckboxChange","onRemoveMembersClick","removeGroupMembers","contactKey","toLocaleLowerCase","activeUserColumns","rowSelection","xs","sm","lg","xl","level","defaultActiveKey","tab","marginLeft","marginTop","UserAddOutlined","TextArea","CreateTemplateForm","setFieldsValue","selectStyle","flex","order","alignSelf","marginRight","buttonStyle","Option","Select","TemplateButtons","templates","setTemplates","toggleModal","templateForm","useEffect","fetchTemplates","template","saveTemplate","createTemplate","children","onSelect","selected","getFieldValue","SendSMSForm","padding","margin","rows","SendEmailForm","SendForm","getGroups","recipients","parseInt","sendMessage","formProps","messagesTabMapper","1","2","messageHistoryStyle","left","marginBottom","paddingBottom","timeSpanStyle","fontSize","MessagesColumn","messages","str","n","useWordBoundary","subString","substr","lastIndexOf","truncate","fetchSMSHistory","fetchEmailHistory","changeCurrentMessages","PaymentService","rates","payload","public_key","identitier","ref_no","payment_action","paymentServices","pay","attachEvent","RechargeForm","IntaSend","setup","publicAPIKey","redirectURL","live","getProfile","setAmount","uuidv4","currency","api_ref","Number","currentTarget","data-api_ref","rateColors","gold","silver","bronze","rateColorStyle","ratesStyle","smsCalculatorStyle","rateRowStyle","borderBottom","rechargeStyle","Rates","sort","b","rate","RateComponents","priceRange","previousIndex","price_limit","SmsCalculator","calculatedRate","mpesaAmount","smsNo","sortedRates","Math","floor","Recharge","setRates","fetchRates","getRates","paddingLeft","Content","Layout","Sider","RoutingComponent","Dashboard","activeNavItem","defaultSelectedKey","handleClickedNavItem","itemClickedKey","returnDynamicSection","Send","CurrentComponent","breakpoint","collapsedWidth","onBreakpoint","broken","onCollapse","collapsed","borderTopRightRadius","borderBottomRightRadius","defaultSelectedKeys","theme","ghost","onBack","back","overflow","App","AOS","init","exact","path","Boolean","location","hostname","dontenv","config","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02b92812.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/app-icon.3b75bad3.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.0ccddf4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete-icon.7744f4d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-picture.f6144ac4.svg\";","module.exports = __webpack_public_path__ + \"static/media/white-logo.8cb2494f.svg\";","module.exports = __webpack_public_path__ + \"static/media/jamboWorld.2a786fd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-feedback.641a954b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-setup-surveys.b0c57320.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-create-query.202b97c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/sms-illust.aed0b604.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send-bulk.d4391192.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send-personalized.58f04dbe.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-two-way-com.b6cc1bd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/video-icon.68e0da21.svg\";","module.exports = __webpack_public_path__ + \"static/media/best-rates-icon.da45aea2.svg\";","module.exports = __webpack_public_path__ + \"static/media/flexible-rates-icon.a809e565.svg\";","module.exports = __webpack_public_path__ + \"static/media/user-experience-icon.db56fda2.svg\";","module.exports = __webpack_public_path__ + \"static/media/about-us-image.25239530.svg\";","module.exports = __webpack_public_path__ + \"static/media/world-icon.f0c1651b.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone-icon.e51c23fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/like-button.61fa0517.svg\";","module.exports = __webpack_public_path__ + \"static/media/loud-horn.96ad2a8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/send.31219cf4.svg\";","module.exports = __webpack_public_path__ + \"static/media/messages-icon.28b0ca57.svg\";","module.exports = __webpack_public_path__ + \"static/media/location-map.631baa6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-person.e8bf134c.svg\";","module.exports = __webpack_public_path__ + \"static/media/login-flower.e33e8bc0.svg\";","module.exports = __webpack_public_path__ + \"static/media/group-icon.d5e70864.svg\";","module.exports = __webpack_public_path__ + \"static/media/gold.3f09232e.svg\";","module.exports = __webpack_public_path__ + \"static/media/silver.ee69e5c1.svg\";","module.exports = __webpack_public_path__ + \"static/media/bronze.3694e458.svg\";","import React from 'react';\nimport logo from '../../assets/white-logo.svg';\nimport './index.scss';\n\nconst footer = () => {\n    return(\n    <footer class=\"mdl-mega-footer\" style={{backgroundColor: 'black'}}>\n                            \n    <div className=\"footer-content\" >\n\n    <div  class=\"mdl-mega-footer__drop-down-section\">\n        <div id=\"company-content\">\n            <div id=\"logo\"><img src={logo} alt=\"Jambo SMS\" /></div>\n            <div id=\"company-statement\">We make it easy, fast and affordable to send SMS marketing campaigns and engage with your customers.</div>\n            <div className=\"social-media\">\n                <a href=\"https://www.facebook.com/jambosms/\" target=\"_blank\"><i class=\"fa fa-facebook fa-lg\" aria-hidden=\"true\"></i></a>\n                <a href=\"https://twitter.com/Jambo_sms?s=08\" target=\"_blank\"><i class=\"fa fa-twitter fa-lg\" aria-hidden=\"true\"></i></a>\n                <a href=\"https://www.linkedin.com/company/softsearch/\" target=\"_blank\"><i class=\"fa fa-linkedin fa-lg\" aria-hidden=\"true\"></i></a>\n            </div>\n\n        </div>\n    </div>\n\n    <div  class=\"mdl-mega-footer__drop-down-section\">\n        \n        <ul class=\"mdl-mega-footer__link-list\">\n            <li><h5 style={{color: '#ffffff'}}>FAQ's</h5></li>\n            <li>Questions</li>\n            <li>Answers</li>\n            <li>Contact us</li>\n        </ul>\n    </div>\n    \n\n    <div  class=\"mdl-mega-footer__drop-down-section\">\n        <ul class=\"mdl-mega-footer__link-list\">\n            <li><h5 style={{color: '#ffffff'}}>Contacts</h5></li>\n            <li>info@softsearch.co.ke</li>\n            <li>+254777101005</li>\n            <li>4th Parklands Diamond Plaza 2nd Floor</li>\n        </ul>\n    </div>\n\n    <div  class=\"mdl-mega-footer__drop-down-section\">\n        <ul class=\"mdl-mega-footer__link-list\">\n            <li><h5 style={{color: '#ffffff'}}>Patners</h5></li>\n            <li>SoftSearch</li>\n            <li>Kulmi</li>\n            <li>Omaar Marketplace</li>\n        </ul>\n    </div>\n    </div>\n\n    <div style={{textAlign: 'center', color:\"#ffffff\"}}>\n        <div class=\"footer-logo\"> @SoftSearch 2020</div>\n    </div>\n\n</footer>);\n}\n\nexport default footer;","import React from 'react';\nimport Bounce from 'react-reveal/Bounce';\nimport Zoom from 'react-reveal/Zoom';\nimport Fade from 'react-reveal/Fade';\n\nimport './index.scss';\n\nimport jamboWorldSvg from './../../assets/jamboWorld.svg';\nimport feedbackSvg from './../../assets/icon-feedback.svg';\nimport setupSurveySvg from './../../assets/icon-setup-surveys.svg';\nimport createQuerySvg from './../../assets/icon-create-query.svg';\nimport appIcon from './../../assets/app-icon.png';\n\nconst styles = {\n    jamboWorldSvg: {\n        backgroundImage: `url(${jamboWorldSvg})`\n    },\n    feedbackSvg: {\n        backgroundImage: `url(${feedbackSvg})`\n    },\n    setupSurveySvg: {\n        backgroundImage: `url(${setupSurveySvg})`\n    },\n    createQuerySvg: {\n        backgroundImage: `url(${createQuerySvg})`\n    },\n    appIcon: {\n        backgroundImage: `url(${appIcon})`\n    },\n}\n\nconst ussdProductPage = () => {\n    return (\n        <>\n        <Fade top>\n                <div style={styles.jamboWorldSvg} className=\"main-section\">\n                        <Bounce right>\n                            <div className=\"msg-sect\">\n                                <div className=\"msg-title\">USSD service codes</div>\n                                <div className=\"msg-content\">Get a Customized USSD Service Code that meets your business needs.</div>\n                            </div>\n                        </Bounce>\n                </div>\n            </Fade>\n            <Zoom>\n                    <div className=\"service-sect\">\n                        <div className=\"service-sect-title\">Our USSD Services enable you to:</div>\n                        <div className=\"all-services-sect\">\n\n                            <div className=\"service-opt\">\n                                <div style={styles.feedbackSvg} className=\"service-svg\">\n                                </div>\n                                <div className=\"service-title\">setup real time surveys</div>\n                                <div className=\"service-content\">collect feedback by easily setting up USSD surveys.</div>\n                            </div>\n\n                            <div className=\"service-opt\">\n                                <div style={styles.setupSurveySvg} className=\"service-svg\">\n                                </div>\n                                <div className=\"service-title\">build option menu feedback systems</div>\n                                <div className=\"service-content\">get comprehensive feedback from surveys with our structured USSD surveys.</div>\n                            </div>\n\n                            <div className=\"service-opt\">\n                                <div style={styles.createQuerySvg} className=\"service-svg\">\n                                </div>\n                                <div className=\"service-title\">create query systems</div>\n                                <div className=\"service-content\">get important information within seconds i.e accounts data.</div>\n                            </div>\n\n                        </div>\n                    </div>\n                </Zoom>\n                    <div className=\"features-sect\">\n                        <div className=\"features-title\">features</div>\n                        \n                        <div  className=\"features-row\">\n\n                        <div  className=\"feature\">\n                            <div className=\"feature-title\">Customized Messages</div>\n                                    <div className=\"feature-content\">Tailor your USSD menu to meet your end objective.</div>\n                            </div>\n\n                            <div  className=\"feature\">\n                            <div className=\"feature-title\">Scalable Pricing</div>\n                                    <div className=\"feature-content\">View comprehensive reporting on sms delivery.</div>\n                            </div>\n\n                            <div className=\"feature\">\n                            <div className=\"feature-title\">USSD Surveys</div>\n                                    <div className=\"feature-content\">Set up,launch and collect feedback easily setting using a USSD survey.</div>\n                            </div>\n\n                            <div  className=\"feature\">\n                            <div className=\"feature-title\">Reporting</div>\n                                    <div className=\"feature-content\">Analyze performance with comprehensive reporting on USSD service delivery.</div>\n                            </div>\n\n                        </div>\n                    </div>\n        </>\n    );\n}\n\nexport default ussdProductPage;","import React from 'react';\nimport Bounce from 'react-reveal/Bounce';\nimport Zoom from 'react-reveal/Zoom';\nimport Fade from 'react-reveal/Fade';\n\nimport './index.scss';\n\nimport bulkSmsSvg from './../../assets/sms-illust.svg';\nimport sendBulkSvg from './../../assets/icon-send-bulk.svg';\nimport sendPersonalizedSvg from './../../assets/icon-send-personalized.svg';\nimport twoWayComSvg from './../../assets/icon-two-way-com.svg';\nimport appIcon from './../../assets/app-icon.png';\n\nconst styles = {\n    bulkSmsSvg: {\n        backgroundImage: `url(${bulkSmsSvg})`\n    },\n    sendBulkSvg: {\n        backgroundImage: `url(${sendBulkSvg})`\n    },\n    sendPersonalizedSvg: {\n        backgroundImage: `url(${sendPersonalizedSvg})`\n    },\n    twoWayComSvg: {\n        backgroundImage: `url(${twoWayComSvg})`\n    },\n    appIcon: {\n        backgroundImage: `url(${appIcon})`\n    }\n}\n\nconst bulkSmsProductPage = () => {\n    return (\n        <>\n        <Fade top>\n        <div style={styles.bulkSmsSvg} className=\"main-section bulk-sms\">\n                    <Bounce right>\n                        <div className=\"msg-sect\">\n                            <div className=\"msg-title\">Bulk SMS Messaging</div>\n                            <div className=\"msg-content\"> Increase customer interaction by crafting and sending an SMS to a multitude of individuals within your contact database with ease.</div>\n                        </div>\n                    </Bounce>\n                    </div>\n                </Fade>\n                    <div className=\"service-sect\">\n                        <div className=\"service-sect-title\">Our USSD Services enable you to achieve:</div>\n                        <Zoom>\n                        <div className=\"all-services-sect\">\n\n                            <div className=\"service-opt\">\n                                <div style={styles.sendBulkSvg} className=\"service-svg\">\n                                </div>\n                                <div className=\"service-title\">Send Bulk SMS</div>\n                                <div className=\"service-content\">Increase customer interactions by sending sms at scale.</div>\n                            </div>\n\n                            <div className=\"service-opt\">\n                                <div style={styles.sendPersonalizedSvg} className=\"service-svg\">\n                                </div>\n                                <div className=\"service-title\">Personalized Messages</div>\n                                <div className=\"service-content\">With personalized Bulk SMS, a single SMS template with variable fields is used to generate unique Bulk SMS messages.</div>\n                            </div>\n\n                            <div className=\"service-opt\">\n                                <div style={styles.twoWayComSvg} className=\"service-svg\">\n                                </div>\n                                <div className=\"service-title\">Two-Way Communication</div>\n                                <div className=\"service-content\">Enhance sales, marketing and support in real-time by sending and receiving sms.</div>\n                            </div>\n\n                        </div>\n                        </Zoom>\n                    </div>\n                    <div className=\"features-sect\">\n                        <div className=\"features-title\">features</div>\n                        <div className=\"features-row\">\n                            <div style={styles.schedule} className=\"feature\">\n                                <div className=\"feature-title\">schedule SMS</div>\n                                    <div className=\"feature-content\">Plan ahead with scheduled messages programmed to be sent at a specific time in the future.</div>\n                            </div>\n\n                            <div style={styles.autoResponse}  className=\"feature\">\n                            <div className=\"feature-title\">Auto Responses</div>\n                                    <div className=\"feature-content\">Give instant feedback to incoming sms by enabling automatic responses.</div>\n                            </div>\n\n                            <div style={styles.deliveryReport} className=\"feature\">\n                            <div className=\"feature-title\">Delivery Report</div>\n                                    <div className=\"feature-content\">View comprehensive reporting on sms delivery.</div>\n                            </div>\n\n                            <div style={styles.realTime} className=\"feature\">\n                            <div className=\"feature-title\">Real-time Analytics</div>\n                                    <div className=\"feature-content\">Measure your marketing outcomes with real-time analytics once your SMS have been delivered.</div>\n                            </div>\n\n                        </div>\n                        <div className=\"features-row\">\n\n                        <div  className=\"feature\">\n                            <div className=\"feature-title\">Customized Messages</div>\n                                    <div className=\"feature-content\">Measure your marketing outcomes with real-time analytics once your SMS have been delivered.</div>\n                            </div>\n\n                            <div  className=\"feature\">\n                            <div className=\"feature-title\">Scalable Pricing</div>\n                                    <div className=\"feature-content\">View comprehensive reporting on sms delivery.</div>\n                            </div>\n\n                            <div className=\"feature\">\n                            <div className=\"feature-title\">SMS Surveys</div>\n                                    <div className=\"feature-content\">Collect feedback by easily setting up SMS surveys.</div>\n                            </div>\n\n                            <div  className=\"feature\">\n                            <div className=\"feature-title\">Reporting</div>\n                                    <div className=\"feature-content\">View comprehensive reporting on sms delivery.</div>\n                            </div>\n\n                        </div>\n                    </div>\n        </>\n    );\n}\n\nexport default bulkSmsProductPage;","import React from 'react';\nimport Bounce from 'react-reveal/Bounce';\nimport homePicture from '../../assets/home-picture.svg';\nimport videoIcon from '../../assets/video-icon.svg';\nimport bestRatesIcon from '../../assets/best-rates-icon.svg';\nimport flexibleRatesIcon from '../../assets/flexible-rates-icon.svg';\nimport userExperienceIcon from '../../assets/user-experience-icon.svg';\nimport aboutUsImage from '../../assets/about-us-image.svg';\nimport worldIcon from '../../assets/world-icon.svg';\nimport phoneIcon from '../../assets/phone-icon.svg';\nimport likeButton from '../../assets/like-button.svg';\nimport loudHornIcon from '../../assets/loud-horn.svg';\nimport sendIcon from '../../assets/send.svg';\nimport messagesIcon from '../../assets/messages-icon.svg';\nimport locationMap from '../../assets/location-map.svg';\n\n\n\nimport './index.scss';\n\n\nconst LandingPage = props => {\n\n    const { routeToRegister } = props;\n\n    return(\n    <>\n    <div className=\"main-sect\" style={{backgroundImage:`url(${homePicture})`}}>\n    <Bounce right>\n        <div className=\"action-sect\">\n            <div className=\"message-sect\">\n            Stay Ahead With Effective Bulk SMS Solutions!\n            </div>\n            <div className=\"buttons-sect\">\n            <div className=\"reg-button\" onClick={routeToRegister}>GET STARTED</div>\n                <div className=\"vid-button\"><img src={videoIcon} alt=\"Video Icon\" />&nbsp;WATCH VIDEO</div>\n            </div>\n        </div>\n    </Bounce>\n    </div>\n    <div className=\"choose-us-sect\">\n        <div className=\"title\">Why Choose Us</div>\n        <div className=\"cards-sect\">\n            <div  className=\"card\">\n                <div className=\"card-img\"><img src={bestRatesIcon} alt=\"Best Rates\"/></div>\n                <div className=\"title\">Best Rates</div>\n                <div className=\"card-content\">Effective Solutions, affordable rates.</div>\n            </div>\n            <div  className=\"card\">\n                <div className=\"card-img\"><img src={flexibleRatesIcon} alt=\"Flexible\"/></div>\n                <div className=\"title\">Flexible & Fast</div>\n                <div className=\"card-content\">Tailored Solutions, quick delivery turnaround.</div>\n            </div>\n            <div  className=\"card\">\n                <div className=\"card-img\"><img src={userExperienceIcon} alt=\"UX\"/></div>\n                <div className=\"title\">User Experience</div>\n                <div className=\"card-content\">Satisfactory experience, ease of use.</div>\n            </div>\n        </div>\n    </div>\n    <div id=\"about-sect\">\n            <div className=\"blue-title\">- About -</div>\n        <div className=\"bg-image-div\" style={{backgroundImage:`url(${aboutUsImage})`, \n        backgroundPosition: '100% 5%', backgroundRepeat: \"no-repeat\", backgroundSize: \"380px\"}}>\n        <div className=\"about-title\" >\n        Who We Are\n        </div>\n        \n        <div className=\"intro-sect\">\n            <div className=\"intro-sect-title\">soft search limited</div>\n            <div className=\"intro-sect-content\">In a world where an average person spends at least 5 hours on their mobile devices, there is no better way to reach out to your target audience than through their mobile device.\n                As Soft Search Limited, we developed Jambo SMS to enable enterprises to stay ahead of the pack by effectively reaching out to their potential customers, using the right mobile communication products. \n                Jambo SMS is a handy service that will enable you to reach, interact, engage and transact with your customers at an almost personal level. \n                Whats more, we are true to our promise and guarantee quality products that will substantially improve your customer engagement leading onto an improved brand perception among your customers.\n                Our Bulk SMS system ensures that you can reach your customers instantly with a quick and simple integration. Not only can you send relevant, targeted messages with only one API request,\n                but also to a larger group. Even more,you can brand each message with your company or service name.\n                Indeed, Jambo SMS is nothing short of what your enterprise needs for all its Bulk SMS needs.\n            </div>\n\n            <div className=\"action-btn\" onClick={routeToRegister}>sign up now</div>\n        </div>\n        </div>\n    </div>\n    <div id=\"what-we-do-sect\">\n    <div className=\"blue-title\">- Features -</div>\n\n        <div className=\"title\">What We Do</div>\n        <div gutter={5} className=\"cards-sect\">\n\n                <div  className=\"card\">\n                    <div className=\"card-img\"><img src={phoneIcon} alt=\"Phone Icon\"/></div>\n                    <div className=\"title\">SMS Marketing Campaigns</div>\n                    <div className=\"card-content\">Nothing speaks directly to your customers than an SMS sent to them right on the palm of their hands.\n                     Our SMS Marketing solution will enable your business to target your customers directly thereby increasing your chances of realizing sales on the products or services you wish to market.</div>\n                </div>\n                <div  className=\"card\">\n                    <div className=\"card-img\"><img src={loudHornIcon} alt=\"Flexible\"/></div>\n                    <div className=\"title\">Promo SMS</div>\n                    <div className=\"card-content\">For those looking to run a marketing promotion to a wide audience, then Promo SMS is the solution for you. This solution allows you to craft promotional messages that are disseminated in Bulk to all customers.</div>\n                </div>\n                <div  className=\"card\">\n                    <div className=\"card-img\"><img src={sendIcon} alt=\"send\"/></div>\n                    <div className=\"title\">Product Launch SMS</div>\n                    <div className=\"card-content\">What better way to inform your clients of a new product that by an SMS direct to their phone. Our Product Launch SMS is the key to effectively informing your customers of new products.</div>\n                </div>\n\n\n                <div  className=\"card\">\n                    <div className=\"card-img\"><img src={messagesIcon} alt=\"messages\"/></div>\n                    <div className=\"title\">SMS Alerts</div>\n                    <div className=\"card-content\">Do you need to keep your customers informed consistently? If so, then SMS Alerts is the solution for you. This solution allows you to craft SMS alerts which can be sent to all your customers in a timely manner.</div>\n                </div>\n                <div  className=\"card\">\n                    <div className=\"card-img\"><img src={likeButton} alt=\"Flexible\"/></div>\n                    <div className=\"title\">Greeting SMS</div>\n                    <div className=\"card-content\">Say hello or pass any general greeting to all your customers with our Greeting SMS solution. This solution will enable you to craft greeting messages that will be sent directly to your clients mobile phone.</div>\n                </div>\n                <div  className=\"card\">\n                    <div className=\"card-img\"><img src={worldIcon} alt=\"UX\"/></div>\n                    <div className=\"title\">Targeted SMS Marketing</div>\n                    <div className=\"card-content\">\n                    Are you looking to target a specific group from your customer database? If yes, then Targeted SMS Marketing is the solution for you. This solution allows you to craft marketing messages which are sent to a select group of customers. \n                     </div>\n                </div>\n\n        </div>\n    </div>\n    <div id=\"pricing-sect\">\n        <div className=\"blue-title\">- Pricing -</div>\n        <div className=\"title\">SMS</div>\n        <div className=\"centering-wrapper\">\n            <div id=\"pricing-content\">\n                <table id=\"pricing\">\n                    <tr>\n                        <th className=\"title-row\" id=\"row-title\">Telco</th>\n                        <th className=\"title-row plan\">Gold (KES 10,000 - 399,999)</th>\n                        <th className=\"title-row plan\">Silver (KES 10,000 - 99,999)</th>\n                        <th className=\"title-row plan\">Bronze (KES 0 - 9999)</th>      \n                    </tr>\n                    <tr>\n                        <th className=\"telcos\">Safaricom</th>\n                        <th className=\"values\">0.6&nbsp;Kes</th>\n                        <th className=\"values\">0.7&nbsp;Kes</th>\n                        <th className=\"values\">1.00&nbsp;Kes</th>\n\n                    </tr>\n                    <tr className=\"pricing-row central-row\"  >\n                        <th className=\"telcos\">Airtel</th>\n                        <th className=\"values\">0.6&nbsp;Kes</th>\n                        <th className=\"values\">0.7&nbsp;Kes</th>\n                        <th className=\"values\">1.00&nbsp;Kes</th>\n\n                    </tr>\n                    <tr className=\"pricing-row\" >\n                        <th className=\"telcos\">Other</th>\n                        <th className=\"values\">0.6&nbsp;Kes</th>\n                        <th className=\"values\">0.7&nbsp;Kes</th>\n                        <th className=\"values\">1.00&nbsp;Kes</th>\n                    </tr>\n                </table>\n            </div>\n        </div>\n\n    </div>\n    <div id=\"contact-sect\">\n    <div className=\"blue-title\">- Contact Us -</div>\n        <div className=\"title\">Get In Touch With us</div>\n        <div id=\"contact-content\" style={{backgroundImage:`url(${locationMap})`, backgroundRepeat: \"no-repeat\", backgroundSize: \"cover\"}}>\n\n            <div id=\"contacts\">\n                <div id=\"contact-title\">\n                    <span>Contacts</span> <span id=\"white-space\">&nbsp;</span>\n                </div>\n                <div id=\"contacts-list\">\n                    <div className=\"contact\">\n                        <div className=\"contact-name\">Location</div>\n                        <div className=\"contact-info\"> Parklands Fairview road</div>\n                    </div>\n                    <div className=\"contact\">\n                        <div className=\"contact-name\">Building</div>\n                        <div className=\"contact-info\">Diamond Plaza 2nd Floor</div>\n                    </div>\n                    <div className=\"contact\">\n                        <div className=\"contact-name\">Email</div>\n                        <div className=\"contact-info\">info@softsearch.co.ke</div>\n                    </div>\n                    <div className=\"contact\">\n                        <div className=\"contact-name\">Phone</div>\n                        <div className=\"contact-info\">+254777101005</div>\n                    </div>\n                    <div className=\"social-media\">\n                    <a href=\"https://www.facebook.com/jambosms/\" target=\"_blank\"><i class=\"fa fa-facebook fa-lg\" aria-hidden=\"true\"></i></a>\n                    <a href=\"https://twitter.com/Jambo_sms?s=08\" target=\"_blank\"><i class=\"fa fa-twitter fa-lg\" aria-hidden=\"true\"></i></a>\n                    <a href=\"https://www.linkedin.com/company/softsearch/\" target=\"_blank\"><i class=\"fa fa-linkedin fa-lg\" aria-hidden=\"true\"></i></a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    </>\n    );\n\n}\n\nexport default LandingPage;","import * as Yup from 'yup';\n\nexport const yupNewGroupObj = Yup.object({\n    groupName: Yup.string()\n        .required('* Required'),\n    description: Yup.string()\n        .required('* Required'),\n    })\n\n    export const yupNewMemberObj = Yup.object({\n        firstName: Yup.string()\n            .required('* Required'),\n        secondName: Yup.string()\n            .required('* Required'),\n        phoneNumber: Yup.string()\n            .required('* Required'),\n        })\n\nexport const yupRegObj = Yup.object({\n    fullname: Yup.string()\n        .max(20, '* Must be 15 characters or less')\n        .min(3, 'must be more than 3 characters')\n        .required('* Required'),\n    email: Yup.string()\n        .email('* Invalid email address')\n        .required('* Required'),\n    county: Yup.string()\n        .required('* Required'),\n    company: Yup.string()\n        .required('* Required'),\n    phone: Yup.string()\n        .required('* Required'),\n    password: Yup.string()\n        .min(8, '* must be more than 8 characters')\n        .required('* Required'),\n    confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password'), null], 'Passwords must match')\n        .required('* Required'),\n    })\n\nexport const yupLoginObj = Yup.object({\n    email: Yup.string()\n        .email('* Invalid email address')\n        .required('* Required'),\n    password: Yup.string()\n        .required('* Required'),\n    })\n\nexport const yupSendSMSObj = Yup.object({\n    receipients: Yup.array(),\n    groups: Yup.array(),\n    message: Yup.string()\n        .required('* Required'),\n    })\n\nexport const phoneNumberIsValid = (rule, value, callback) => {\n    if (!value) {\n      callback();\n    } else {\n       \n        if (!value.match(/^\\d{9}$/g)) {\n            callback(new Error(\"Enter correct format(9 digits): e.g 723456897\"));\n        }\n      \n    }\n   \n  \n}","const resolve_base_url = () => {\n    const base_url = 'https://jambo-sms-backend-staging.herokuapp.com/api/v1';\n    return base_url;\n}\nexport default resolve_base_url;\n","import {\n    FETCH_SMS_GROUPS_SUCCESS,\n    FETCH_EMAIL_GROUPS_SUCCESS,\n    FETCH_GROUP_MEMBERS_SUCCESS,\n    SET_SESSION_STATE\n    \n} from './../constant/actionTypes';\n\nconst initialState = {\n    emailGroups: null,\n    smsGroups: null,\n    activeGroupMembers: null,\n    isSessionExpired: false\n}\n\nconst dashBoardStoreState = ( state=initialState, action ) => {\n    switch (action.type){\n        case FETCH_EMAIL_GROUPS_SUCCESS:\n            const {emailGroups} = action;\n            return {...state, emailGroups}\n\n        case FETCH_SMS_GROUPS_SUCCESS:\n            const {smsGroups} = action;\n            return {...state, smsGroups};\n\n        case FETCH_GROUP_MEMBERS_SUCCESS:\n            const {activeGroupMembers} = action;\n            return {...state, activeGroupMembers}\n        case SET_SESSION_STATE:\n            const { isSessionExpired } = action;\n            return {...state, isSessionExpired}\n\n\n        default:\n            return state;\n    }\n}\n\nexport default dashBoardStoreState;\n","export const FETCH_DASHBOARD_DATA = 'FETCH_DASHBOARD_DATA';\nexport const FETCH_DASHBOARD_DATA_SUCCESS = 'FETCH_DASHBOARD_DATA_SUCCESS';\nexport const DISPLAY_DASHBOARD_VIEW = 'DISPLAY_DASHBOARD_VIEW';\nexport const LOGGED_IN = 'LOGGED_IN';\nexport const FETCH_SMS_GROUPS = 'FETCH_SMS_GROUPS';\nexport const FETCH_EMAIL_GROUPS = 'FETCH_EMAIL_GROUPS';\nexport const FETCH_SMS_GROUPS_SUCCESS = 'FETCH_SMS_GROUPS_SUCCESS';\nexport const FETCH_EMAIL_GROUPS_SUCCESS = 'FETCH_EMAIL_GROUPS_SUCCESS';\nexport const POST_NEW_GROUP_SUCCESS = \"POST_NEW_GROUP_SUCCESS\";\nexport const FETCH_GROUP_MEMBERS = \"FETCH_GROUP_MEMBERS\";\nexport const FETCH_GROUP_MEMBERS_SUCCESS = \"FETCH_GROUP_MEMBERS_SUCCESS\";\nexport const FETCH_SMS_HISTORY = \"FETCH_SMS_HISTORY\";\nexport const FETCH_EMAIL_HISTORY = \"FETCH_EMAIL_HISTORY\";\nexport const FETCH_EMAIL_HISTORY_SUCCESS = \"FETCH_EMAIL_HISTORY_SUCCESS\";\nexport const FETCH_SMS_HISTORY_SUCCESS = \"FETCH_SMS_HISTORY_SUCCESS\";\nexport const CHANGE_CURRENT_MESSAGES = \"CHANGE_CURRENT_MESSAGES\";\nexport const SET_SESSION_STATE = \"SET_SESSION_STATE\";\n","import {\n    FETCH_EMAIL_HISTORY_SUCCESS,\n    FETCH_SMS_HISTORY_SUCCESS,\n    CHANGE_CURRENT_MESSAGES,\n} from './../constant/actionTypes';\n\nconst initialState = {\n    emails: [],\n    sms: [],\n    currentMessages: 'sms'\n};\n\nconst sendStoreState = ( state=initialState, action ) => {\n    switch (action.type){\n        case FETCH_SMS_HISTORY_SUCCESS:\n            const {sms} = action;\n            return {...state, sms}\n\n        case FETCH_EMAIL_HISTORY_SUCCESS:\n            const {emails} = action;\n            return {...state, emails}\n\n        case CHANGE_CURRENT_MESSAGES:\n            const {currentMessages} = action\n            return {...state, currentMessages}\n            \n        default:\n            return state;\n    }\n};\n\nexport default sendStoreState;\n","import { combineReducers } from 'redux';\nimport dashboardStoreState from './dashboardReducer';\nimport sendStoreState from './sendReducer';\nconst rootReducer = combineReducers({\n    dashboardStoreState,\n    sendStoreState,\n});\n\nexport default rootReducer;\n","import baseUrl from './baseURL';\n\nconst mediumQueryParam = '?medium=email';\n\n\nfunction createUrlMappingObject(defaultUrl){\n    return { sms: defaultUrl,\n        get email(){\n            return this.sms + mediumQueryParam;\n        }\n    \n    };\n}\n\nfunction createSingleObjectActionUrlFunction(baseURL) {\n\n    return (id) => {\n        const url = baseURL + id + '/';\n        return createUrlMappingObject(url);\n    };\n}\n\nexport const groupsUrlMappingObject = createUrlMappingObject(`${baseUrl()}/messages/groups/`);\nexport const messageUrlMappingObject = createUrlMappingObject(`${baseUrl()}/messages/`);\nexport const templatesURL = `${baseUrl()}/messages/template/`;\nexport const singleGroupURL = createSingleObjectActionUrlFunction(`${baseUrl()}/messages/groups/`);\nexport const groupMembersCsvUrlMappingObject = createUrlMappingObject(`${baseUrl()}/messages/group-members/upload/`);\nexport const newgroupMemberMappingObject = createUrlMappingObject(`${baseUrl()}/messages/groups/members/`);\nexport const ratesUrl = `${baseUrl()}/payments/rates/`\nexport const payMpesaUrl =  `${baseUrl()}/payments/pay/`;\nexport const publicKeyUrl = `${baseUrl()}/auth/public-key/`;\nexport const refreshTokenUrl = `${baseUrl()}/auth/refresh/token/`;\n","import axios from 'axios';\nimport baseUrl from './baseURL';\nimport { groupsUrlMappingObject, singleGroupURL, groupMembersCsvUrlMappingObject, newgroupMemberMappingObject } from './urls';\nimport { requestHeaderDetails, notificationHandler, checkSessionStatus } from './utils';\n\n\nexport default class GroupsService {\n\n\n    static async fetchGroups (mode=\"sms\") {\n        \n        try {\n            const url = groupsUrlMappingObject[mode];\n            const response = await axios.get(url, requestHeaderDetails());\n            return response;\n\n        } catch (error) {\n            console.log('error in fetching groups', error);\n            checkSessionStatus(error.response);\n        }\n    }\n\n    static async postNewGroup (newGroup, mode) {\n        const {groupName:name, description} = newGroup;\n        try {\n            const url = groupsUrlMappingObject[mode];\n            const groups = await axios.post(url, {name, description}, requestHeaderDetails());\n            notificationHandler(groups, 'Group created successfully');\n            return groups;\n\n        } catch (error) {\n            checkSessionStatus(error.response);\n            notificationHandler(error.response, error.response.data.name);\n            console.log('error in posting groups', error);\n        }\n    }\n\n    static async postNewMember (newMember, mode) {\n        let requestData\n        try {\n            if (mode === 'sms') {\n                requestData  = {\n                    group: newMember.group,\n                    first_name: newMember.firstName,\n                    last_name: newMember.secondName,\n                    phone: newMember.phoneNumber\n\n                }\n            } else {\n                requestData = {\n                        group: newMember.group,\n                        first_name: newMember.firstName,\n                        last_name: newMember.secondName,\n                        email: newMember.email\n                }\n            }\n            const url = newgroupMemberMappingObject[mode];  \n            const response = await axios.post(url, requestData, requestHeaderDetails());\n            notificationHandler(response, \"Member created successfully\");\n            return response;\n\n        } catch (error) {\n            checkSessionStatus(error.response);\n            notificationHandler(error.response, error.response.data.phone?error.response.data.phone: error.response.data.email);\n        }\n    }\n\n    static async uploadCsv (csvData) {\n        try {\n            \n            const {formData, mode } = csvData;\n            const url = groupMembersCsvUrlMappingObject[mode];\n            const response = await axios.post(url, formData, requestHeaderDetails());\n            notificationHandler(response, \"Upload successfull\");\n            return response;\n\n        } catch (error) {\n            checkSessionStatus(error.response);\n            notificationHandler(error.response, 'Error uploading csv');\n            return console.log(error.response);\n        }\n    }\n\n    static async fetchAllGroupMembers (params){\n        try {\n            const {group, mode} = params;\n            const url = singleGroupURL(group)[mode];\n            const response = await axios.get(url, requestHeaderDetails());\n            const { member_list } = response.data;\n            return member_list\n        } catch (error) {\n            checkSessionStatus(error.response);\n            checkSessionStatus(error.response);\n            console.log('error in fetching member', params);\n        }\n    }\n\n    static async deleteGroupMember(id){\n        try {     \n            const url = `${baseUrl()}/messages/group-members/${id}/`;\n            const groupMember = await axios.delete(url, requestHeaderDetails());\n            return groupMember;\n        } catch (error) {\n            checkSessionStatus(error.response);\n            checkSessionStatus(error.response);\n            console.log('error in fetching member', error);\n        }\n    }\n\n    static async editGroupMember (id, member, group) {\n        try {\n            const url = `${baseUrl()}/messages/group-members/${id}/`;\n            const {firstName:first_name, secondName:last_name, phoneNumber:phone} = member;\n            const edittedMember = await axios.put(url, {group:group.id, first_name, last_name, phone}, requestHeaderDetails());\n            console.log('EDITTED MEMBER IN SERVICE', edittedMember, group)\n            return edittedMember;\n            \n        } catch (error) {\n            checkSessionStatus(error.response);\n            console.log('error in fetching member', error);\n        }\n    }\n\n    static async deleteGroup(id, mode){\n        try {     \n            const url = singleGroupURL(id)[mode];\n            const response = await axios.delete(url, requestHeaderDetails());\n            notificationHandler(response, 'Group deleted');\n        } catch (error) {\n            checkSessionStatus(error.response);\n            notificationHandler(error.response, 'Error deleting group');\n        }\n    }\n\n    static async removeGroupMembers(members, group, mode){\n        try {     \n            const url = singleGroupURL(group.id)[mode];\n            const groupMember = await axios.put(url, {name: group.name, members}, requestHeaderDetails());\n            console.log({name: group.name, members})\n            notificationHandler(groupMember, 'Members removed');\n            console.log(url, groupMember)\n        } catch (error) {\n            checkSessionStatus(error.response);\n            notificationHandler(error.response, 'Errors removing members');\n        }\n    }\n\n}","import { \n    FETCH_DASHBOARD_DATA,\n    FETCH_DASHBOARD_DATA_SUCCESS,\n    DISPLAY_DASHBOARD_VIEW,\n    LOGGED_IN,\n    FETCH_SMS_GROUPS,\n    FETCH_EMAIL_GROUPS,\n    FETCH_EMAIL_GROUPS_SUCCESS,\n    FETCH_SMS_GROUPS_SUCCESS,\n    POST_NEW_GROUP_SUCCESS,\n    FETCH_GROUP_MEMBERS,\n    FETCH_GROUP_MEMBERS_SUCCESS,\n    FETCH_SMS_HISTORY,\n    FETCH_EMAIL_HISTORY,\n    FETCH_SMS_HISTORY_SUCCESS,\n    FETCH_EMAIL_HISTORY_SUCCESS,\n    CHANGE_CURRENT_MESSAGES,\n    SET_SESSION_STATE\n\n    \n} from './../constant/actionTypes';\n\nexport const fetchDashboardDataAction = () => {\n    return {\n        type: FETCH_DASHBOARD_DATA\n    }\n};\n\nexport const fetchDashboardDataSuccessAction = (data) => ({\n    type: FETCH_DASHBOARD_DATA_SUCCESS,\n    data\n});\n\nexport const displayDashboardViewAction = (bool) => ({\n    type: DISPLAY_DASHBOARD_VIEW,\n    bool\n});\n\nexport const loggedIn = (bool) => ({\n    type: LOGGED_IN,\n    bool\n});\n\nexport const fetchSMSGroups = () => ({\n    type: FETCH_SMS_GROUPS,\n});\n\nexport const fetchEmailGroups = () => ({\n    type: FETCH_EMAIL_GROUPS,\n});\n\nexport const fetchSMSGroupsSuccess = (smsGroups) => {\n    return {\n    type: FETCH_SMS_GROUPS_SUCCESS,\n    smsGroups,\n}};\n\nexport const fetchEmailGroupsSuccess = (emailGroups) => {\n    return {\n    type: FETCH_EMAIL_GROUPS_SUCCESS,\n    emailGroups,\n}};\n\nexport const postNewGroupSuccess = () => ({\n    type: POST_NEW_GROUP_SUCCESS,\n});\n\nexport const fetchGroupMembers = (group, mode) => {\n    const params = {group, mode};\n    return {\n        type: FETCH_GROUP_MEMBERS,\n        params,\n    }\n};\n\nexport const fetchGroupMembersSuccess = (activeGroupMembers) => ({\n    type: FETCH_GROUP_MEMBERS_SUCCESS,\n    activeGroupMembers\n});\n\nexport const fetchSMSHistory = () => ({\n    type: FETCH_SMS_HISTORY,\n});\n\nexport const fetchEmailHistory = () => ({\n    type: FETCH_EMAIL_HISTORY,\n\n});\n\n\nexport const fetchSMSHistorySuccess = (sms) => ({\n    type: FETCH_SMS_HISTORY_SUCCESS,\n    sms,\n});\n\nexport const fetchEmailHistorySuccess = (emails) => ({\n    type: FETCH_EMAIL_HISTORY_SUCCESS,\n    emails,\n});\n\nexport const changeCurrentMessages = currentMessages => ({\n    type: CHANGE_CURRENT_MESSAGES,\n    currentMessages,\n});\n\nexport const changeSessionStatus = isSessionExpired => ({\n    type: SET_SESSION_STATE,\n    isSessionExpired,\n});\n","/* eslint-disable require-yield */\nimport { takeLatest, takeEvery, put, call } from 'redux-saga/effects';\nimport groupsService from './../../services/groupsServices';\nimport { fetchSMSGroupsSuccess, fetchEmailGroupsSuccess, fetchGroupMembersSuccess } from './../action-creator';\n\nimport {\n        FETCH_SMS_GROUPS,\n        FETCH_EMAIL_GROUPS,\n        FETCH_GROUP_MEMBERS,\n\n    } from './../constant/actionTypes';\n\nexport function* fetchSMSGroupsWatcher() {\n    yield takeLatest (FETCH_SMS_GROUPS, fetchSMSGroupsSaga);\n}\n\nexport function* fetchSMSGroupsSaga() {\n    try {\n        const {data} = yield call(groupsService.fetchGroups);\n        yield put(fetchSMSGroupsSuccess(data));\n    } catch (error) {\n        \n    }\n}\n\n\nexport function* fetchEmailGroupsWatcher() {\n    yield takeLatest (FETCH_EMAIL_GROUPS, fetchEmailGroupsSaga);\n}\n\nexport function* fetchEmailGroupsSaga() {\n    try {\n        const {data} = yield call(groupsService.fetchGroups, 'email');\n        console.log(data)\n        yield put(fetchEmailGroupsSuccess(data));\n    } catch (error) {\n        \n    }\n}\n\nexport function* fetchGroupMembersSagaWatcher() {\n    yield takeLatest(FETCH_GROUP_MEMBERS, fetchGroupMembersSaga)\n}\n\nexport function* fetchGroupMembersSaga(action) {\n    try {\n        const groupMembers = yield call(groupsService.fetchAllGroupMembers, action.params);\n        yield put(fetchGroupMembersSuccess(groupMembers));\n        \n    } catch (error) {\n        console.log('members saga', error);\n    }\n}\n\n","import axios from 'axios';\nimport {requestHeaderDetails, notificationHandler, checkSessionStatus } from './utils';\nimport { messageUrlMappingObject, templatesURL } from './urls';\n\n\nexport default class MessageService {\n    static async sendMessage (messageDetails) {\n        try {\n            const {groups, recepients, message, subject} = messageDetails;\n            let mode;\n            subject? mode = 'email': mode = 'sms';\n            const url = messageUrlMappingObject[mode]\n            const response = await axios.post(url, {groups, recepients, message, subject}, requestHeaderDetails());\n            \n            notificationHandler(response, \"The message has been sent\");\n\n        } catch (error) {\n\n            if (error.response.data.recepients) {\n                notificationHandler(error.response, error.response.data.recepients);\n            } else if (error.response.data.detail){\n                notificationHandler(error.response, error.response.data.detail);\n\n            } else {\n                checkSessionStatus(error.response);\n            }\n\n            return error.response.status\n        }\n    }\n\n    static async fetchTemplates(){\n        try {\n            const response = await axios.get(templatesURL, requestHeaderDetails());\n            return response.data;\n \n        } catch (error) {\n            checkSessionStatus(error.response);\n            console.log(error.response);\n        }\n    }\n\n    static async createTemplate(templateData){\n        try {\n            const sent = await axios.post(templatesURL,  templateData, requestHeaderDetails());\n            console.log(sent)\n            notificationHandler(sent, 'The template has been created');\n            return true;\n        } catch (error) {\n            checkSessionStatus(error.response);\n            notificationHandler(error.response);\n            return false;\n        }\n    }\n    static async fetchMessages(mode=\"sms\") {\n        \n        try {\n            const url = messageUrlMappingObject[mode];\n            const response = await axios.get(url, requestHeaderDetails());\n            return response.data;\n\n        } catch (error) {\n            checkSessionStatus(error.response);\n            console.log('error in fetching messages', error);\n        }\n    }\n}\n","/* eslint-disable require-yield */\nimport { takeLatest, put, call } from 'redux-saga/effects';\nimport messageServices from '../../services/messageServices';\nimport { fetchSMSHistorySuccess, fetchEmailHistorySuccess } from '../action-creator';\n\nimport {\n        FETCH_EMAIL_HISTORY,\n        FETCH_SMS_HISTORY,\n    } from '../constant/actionTypes';\n\n\nexport function* fetchSMSHistoryWatcher() {\n    yield takeLatest(FETCH_SMS_HISTORY, fetchSMSSaga);\n}\n\nexport function* fetchSMSSaga() {\n    try {\n        const data = yield call(messageServices.fetchMessages);\n        yield put(fetchSMSHistorySuccess(data.results))\n    } catch (error) {\n        console.log(`sms fetch error sagas: ${error}`)\n    }\n}\n\nexport function* fetchEmailHistoryWatcher() {\n    yield takeLatest(FETCH_EMAIL_HISTORY, fetchEmailSaga);\n}\n\nexport function* fetchEmailSaga() {\n    try {\n        const data = yield call(messageServices.fetchMessages, 'email');\n        yield put(fetchEmailHistorySuccess(data.results))\n    } catch (error) {\n        console.log(`email fetch error sagas: ${error}`)\n    }\n}\n","import { all } from 'redux-saga/effects';\nimport {\n        fetchSMSGroupsWatcher,\n        fetchEmailGroupsWatcher,\n        fetchEmailGroupsSaga,\n        fetchSMSGroupsSaga,\n        fetchGroupMembersSagaWatcher,\n        fetchGroupMembersSaga,\n    } from './../middleware/dashboardSaga';\n\nimport {\n        fetchSMSHistoryWatcher,\n        fetchEmailSaga,\n        fetchEmailHistoryWatcher,\n        fetchSMSSaga\n} from './../middleware/sendSaga';\n\nfunction* rootSaga(){\n    yield all([\n        fetchSMSGroupsWatcher(),\n        fetchSMSGroupsSaga(),\n        fetchEmailGroupsWatcher(),\n        fetchEmailGroupsSaga(),\n        fetchGroupMembersSagaWatcher(),\n        fetchGroupMembersSaga(),\n        fetchSMSHistoryWatcher(),\n        fetchSMSSaga(),\n        fetchEmailHistoryWatcher(),\n        fetchEmailSaga()\n    ]);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './../reducer';\nimport rootSaga from './../middleware';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = composeWithDevTools(applyMiddleware(sagaMiddleware));\n\nconst store = createStore(\n    rootReducer,\n    middleware\n);\nsagaMiddleware.run(rootSaga);\n\nexport default store;","import { notification } from 'antd';\nimport forge from 'node-forge';\nimport Swal from 'sweetalert2';\nimport store from \"../redux/store/store.js\";\nimport { changeSessionStatus } from \"../redux/action-creator\";\n\nexport const requestHeaderDetails = () => {\n    const localStorage = window.localStorage;\n    const accessToken = JSON.parse(localStorage.getItem('tokens')).access;\n    const config = {\n        headers: { Authorization: `Bearer ${accessToken}` }\n    };\n    return config;\n}\n\n\nexport const getProfile = () => {\n    const localStorage = window.localStorage;\n    const profile = JSON.parse(localStorage.getItem('profile'));\n    \n    return profile;\n}\n\nexport const fireNotification = (type, message, description) => {\n    notification[type]({\n      message,\n      description,\n    });\n  };\n\n\nexport const notificationHandler = (response, message) => {\n    switch (response.status){\n        case 200:\n            fireNotification('success', 'Success', message);\n            break;\n        case 201:\n            fireNotification('success', 'Success', message);\n            break;\n        case 204:\n            fireNotification('success', 'Success', message);\n            break;\n        case 400:\n            fireNotification('error', 'Error', message?message:response.data.detail)\n            break;      \n        case 401:\n            fireNotification('error', 'Error', 'Authentication Error');\n            break;\n        case 403:\n        fireNotification('error', 'Error', 'You do not have permission to view resource');\n            break;\n        case 404:\n                fireNotification('error', 'Error', 'Resource not found');\n                break;\n        default:\n            \n\n    }\n} \n\nexport function truncate( str, n, useWordBoundary ){\n    if (str.length <= n) { return str; }\n    const subString = str.substr(0, n-1); // the original check\n    return (useWordBoundary \n      ? subString.substr(0, subString.lastIndexOf(\" \")) \n      : subString) + \"...\";\n  };\n\n\n  String.format = function() {\n    var s = arguments[0];\n    for (var i = 0; i < arguments.length - 1; i++) {       \n        var reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");             \n        s = s.replace(reg, arguments[i + 1]);\n    }\n    return s;\n}\n\n\nexport function encryptData( publicKey, string){\n    const pubKey = forge.pki.publicKeyFromPem(publicKey);\n    const encrypted = pubKey.encrypt(string, \"RSA-OAEP\", {\n        md: forge.md.sha256.create(),\n        mgf1: forge.mgf1.create()\n    });\n    const base64 = forge.util.encode64(encrypted);\n    return base64;\n\n}\n\nexport function checkSessionStatus (response) {\n    if (response.status === 401) {\n\n        return Swal.fire({\n            title: 'Error!',\n            text: 'Session Expired,. Please login again',\n            icon: 'error',\n            confirmButtonText: 'Login',\n            onClose: () => {\n                store.dispatch(changeSessionStatus(true));\n            }\n        })\n\n    }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport React from 'react';\nimport { Form, Input, Button } from 'antd';\nimport IntaSend from 'intasend-inlinejs-sdk';\nimport {connect} from 'react-redux';\n\nimport paymentServices from '../../services/paymentServices';\nimport { getProfile } from '../../services/utils';\n\n\n\nconst layout = {\n    wrapperCol: { span: 22 },\n  };\nconst tailLayout = {\n    wrapperCol: { span: 16 },\n  };\n\nlet amount;\nlet refNo;\n\nfunction bindEvent(element, eventName, eventHandler) {\n    if (element.addEventListener) {\n        element.addEventListener(eventName, eventHandler, false);\n    } else if (element.attachEvent) {\n        element.attachEvent('on' + eventName, eventHandler);\n    }\n}\n\nbindEvent(window, 'message', function (e) {\nif (e.data) {\n    if (e.data.message) {\nif (e.data.message.identitier === 'intasend-status-update-cdrtl') {\n    if (e.data.message.state === \"COMPLETE\") {\n        const payload = { ref_no: refNo, amount, payment_action: 'sms_topup' }\n        amount && paymentServices.pay(payload);\n    }\n}\n    }\n}\n});\n\nconst RechargeForm = (props) => {\n\n    IntaSend.setup({\n        publicAPIKey: \"ISPubKey_test_592ad4eb-e5cb-4fe4-abea-719c011b7337\",\n        redirectURL: '',\n        live: false\n    });\n\n    const profile = getProfile();\n    const { email } = profile;\n\n    const { setAmount } = props;\n    const [form] = Form.useForm();\n\n    const onFinish = (values) => {\n        refNo = uuidv4();\n        amount = values.amount;\n        amount && IntaSend.run({\n            amount: amount, \n            currency: \"KES\",\n            email: email,\n            api_ref: refNo,\n            \n        });\n\n    };\n    \n    \n\n    return(\n        <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{ remember: false }}\n        onFinish={onFinish}\n        form={form}\n        >\n            <span>Enter amount</span>\n            <Form.Item\n                name=\"amount\"\n                rules={[{ required: true, message: 'Please input the amount of money you want to spend' }]}\n            >\n                <Input onChange={e => (Number(e.currentTarget.value) && setAmount(e.currentTarget.value))}/>\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n                <Button className=\"tp_button\" data-api_ref=\"payment-link\" type=\"primary\" htmlType=\"submit\" style={{ backgroundColor: '#00A0D3', color: 'white'}}>\n                Purchase SMS\n                </Button>\n            </Form.Item>\n    </Form>\n    );\n}\n\nexport default RechargeForm;\n","import axios from 'axios';\nimport baseUrl from './baseURL';\nimport { requestHeaderDetails, checkSessionStatus } from './utils';\n\nexport default class AuthService {\n\n    static async registerUser(userDetails) {\n        try {\n            const url = `${baseUrl()}/auth/register/`;\n            const { email, phone, fullname: full_name, company, password, confirmPassword: confirmed_password, county } = userDetails;\n            const newUser = { email, phone, full_name, company, password, confirmed_password, county }\n            const response = await axios.post(url, newUser);\n            return response;\n            \n        } catch (error) {\n            return error.response.data\n        }\n\n    }\n\n    static async loginUser(userDetails) {\n        try{\n            const url = `${baseUrl()}/auth/login/`;\n            const { email, password } = userDetails;\n            const newUser = { email, password }\n            const response = axios.post(url, newUser)\n                .then(response =>{\n                    return response;\n                })\n                .catch(error => {\n                });\n\n            return response;\n            \n        }catch (error) {\n            return error.response.data\n        }\n            \n    }\n\n    static async fetchProfile() {\n        try{\n            const url = `${baseUrl()}/auth/profile/`;\n            const response = await axios.get(url, requestHeaderDetails());\n            return response;\n        }catch (error) {\n            checkSessionStatus(error.response);\n            return error.response.data\n        }\n            \n    }\n\n    static async fetchPublicKey() {\n        try{\n            const url = `${baseUrl()}/auth/public-key/`;\n            const response = await axios.get(url, requestHeaderDetails());\n            return response;\n        }catch (error) {\n            checkSessionStatus(error.response);\n            return error.response.data\n        }\n            \n    }\n}","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport Swal from 'sweetalert2';\nimport Loader from 'react-loader-spinner';\n\nimport { yupRegObj } from './../../components/forms/validation';\nimport './register.scss';\nimport AuthService from './../../services/authServices';\n\n\nconst RegisterForm = (props) => {\n    const {changeAuthActiveState} = props;\n    const [loaderVisibility, changeLoaderVisibility] = useState('hidden');\n\n    const formik = useFormik({\n            initialValues: {\n            email: '',\n            phone: '',\n            fullname: '',\n            company: '',\n            county: '',\n            password: '',\n            confirmPassword: '',\n            },\n            validationSchema: yupRegObj,\n            onSubmit: async (values) => {\n                changeLoaderVisibility('visible');\n                const response = await AuthService.registerUser(values);\n                changeLoaderVisibility('hidden');\n                if (response.data) {\n                    return Swal.fire({\n                        title: 'Success!',\n                        text: response.data.message,\n                        icon: 'success',\n                        confirmButtonText: 'close'\n                    });\n                }\n                else if (response.non_field_errors) {\n                    console.log('ERROR', response.non_field_errors);\n                    return Swal.fire({\n                        title: 'Error!',\n                        text: response.non_field_errors[0],\n                        icon: 'error',\n                        confirmButtonText: 'close'\n                    })\n                } else if(Object.keys(response).length > 0){\n                    console.log('ERRRRRRooor returned', response);\n                    const allErrors = Object.values(response);\n                    const concatErrorString = allErrors.join(\"\");\n                    return Swal.fire({\n                        title: 'Error!',\n                        text: concatErrorString,\n                        icon: 'error',\n                        confirmButtonText: 'close'\n                    })\n                }\n                \n            },\n        });\n\n    return(\n        <form className=\"form\" id=\"register-form\" autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n\n        <div className=\"inputs-wrapper\">\n            <span className=\"form-title\">REGISTER</span>\n        </div>\n        <div className=\"inputs-wrapper\">\n            <span className=\"form-tag\">\n                Already have an account? <span className=\"form-link\" onClick={() => changeAuthActiveState()}>Login here</span>\n            </span>\n        </div>\n\n            <div className=\"inputs-wrapper\">\n\n                <div className=\"input-container\">\n                    <div className=\"input-label\">\n                    <span >email</span>\n                        {formik.touched.email && formik.errors.email ? \n                            <span className=\"error-span\">{formik.errors.email}</span>\n                        : null}\n                    </div>\n                    <input name=\"email\" {...formik.getFieldProps('email')}>\n                    </input>\n                </div>\n\n                \n                <div className=\"input-container\">\n                    <div className=\"input-label\">\n                        <span >phone</span>\n                        {formik.touched.phone && formik.errors.phone ? \n                            <span className=\"error-span\">{formik.errors.phone}</span>\n                        : null}\n                    </div>\n                    <input name=\"phone\" {...formik.getFieldProps('phone')}>\n                    </input>\n                </div> \n\n            </div>                  \n        \n            <div className=\"inputs-wrapper\">\n                <div className=\"input-container\">\n                    <div className=\"input-label\">\n                        <span >full name</span>\n                        {formik.touched.fullname && formik.errors.fullname ? \n                            <span className=\"error-span\">{formik.errors.fullname}</span>\n                        : null}\n                    </div>\n                    <input name=\"fullname\" {...formik.getFieldProps('fullname')} > \n                    </input>\n                </div>\n\n                <div className=\"input-container\">\n                    <div className=\"input-label\">\n                    <span >county</span>\n                        {formik.touched.county && formik.errors.county ? \n                            <span className=\"error-span\">{formik.errors.county}</span>\n                        : null}\n                    </div>\n                    <input name=\"county\" {...formik.getFieldProps('county')} >\n                    </input>\n                </div> \n            </div>                  \n\n            <div className=\"inputs-wrapper\">\n                <div className=\"input-container\">\n                    <div className=\"input-label\">\n                    <span >password</span>\n                        {formik.touched.password && formik.errors.password ? \n                            <span className=\"error-span\">{formik.errors.password}</span>\n                        : null}\n                    </div>\n                    <input type=\"password\" name=\"password\" {...formik.getFieldProps('password')}>\n                    </input>\n                </div>\n                <div className=\"input-container\">\n                    <div className=\"input-label\">\n                    <span >company</span>\n                        {formik.touched.company && formik.errors.company ? \n                            <span className=\"error-span\">{formik.errors.company}</span>\n                        : null}\n                    </div>\n                    <input name=\"company\" {...formik.getFieldProps('company')}>\n                    </input>\n                </div> \n            </div>                  \n\n            <div className=\"inputs-wrapper\">\n                <div className=\"input-container\">\n                    <div className=\"input-label\">\n                    <span >confirm password</span>\n                        {formik.touched.confirmPassword && formik.errors.confirmPassword ? \n                            <span className=\"error-span\">{formik.errors.confirmPassword}</span>\n                        : null}\n                </div>\n                <input type=\"password\" name=\"confirmPassword\" {...formik.getFieldProps('confirmPassword')}>\n                </input>\n            </div>  \n\n                <div className=\"button-container\">\n                    <button type=\"submit\" className=\"register-button\">\n                        REGISTER\n                    </button>\n                </div>      \n            </div>    \n            <div style={{visibility: loaderVisibility}} className=\"inputs-wrapper\">\n            <Loader\n                    type=\"Bars\"\n                    color=\"#1B7EC2\"\n                    height={50}\n                    width={50}\n                />\n            </div>   \n        </form>\n    );\n}\n\nexport default RegisterForm;","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport Swal from 'sweetalert2';\nimport { useHistory } from \"react-router-dom\";\nimport Loader from 'react-loader-spinner';\nimport AuthService from '../../services/authServices';\nimport { yupLoginObj } from './../../components/forms/validation';\nimport './login.scss';\n\n\nconst LoginForm = (props) => {\n\n    const {changeAuthActiveState} = props;\n    const [loaderVisibility, changeLoaderVisibility] = useState('hidden');\n    const history = useHistory();\n\n    const formik = useFormik({\n            initialValues: {\n            email: '',\n            password: '',\n            },\n            validationSchema: yupLoginObj,\n            onSubmit: async (values) => {\n                changeLoaderVisibility('visible');\n                const response = await AuthService.loginUser(values);\n\n                // store access tokens in local storeage\n                \n                window.localStorage.setItem('tokens',JSON.stringify(response.data));\n                const res = await AuthService.fetchProfile();\n                window.localStorage.setItem('profile',JSON.stringify(res.data));\n                changeLoaderVisibility('hidden');\n\n            \n                if (response.status === 200){\n                    return  Swal.fire({\n                                    title: 'Success!',\n                                    text: 'Login Successful',\n                                    icon: 'success',\n                                    confirmButtonText: 'close',\n                                    onClose: () => history.push('/dashboard')\n                                })\n                } else if (response.detail){\n                    return Swal.fire({\n                        title: 'Error!',\n                        text: response.detail,\n                        icon: 'error',\n                        confirmButtonText: 'close'\n                    })\n                } else {\n                    return Swal.fire({\n                        title: 'Error!',\n                        text: \"Something unexpected happened.Please try again\",\n                        icon: 'error',\n                        confirmButtonText: 'close'\n                    })\n                }\n            },\n        });\n\n    return(\n        <form className=\"form\" id=\"login-form\" autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n            <div className=\"wrapper\">\n                <span className=\"form-title\">LOGIN</span>\n            </div>\n                <div className=\"wrapper\"> \n                    <span className=\"form-tag\">\n                        Don't have an account? <span className=\"form-link\" onClick={() => changeAuthActiveState()}>Register here</span>\n                    </span>\n                </div>\n                <div className=\"wrapper\">\n                    <div className=\"input-container\">\n                        <div className=\"input-label\">\n                        <span >email</span>\n                            {formik.touched.email && formik.errors.email ? \n                                <span className=\"error-span\">{formik.errors.email}</span>\n                            : null}\n                        </div>\n                        <input name=\"email\" {...formik.getFieldProps('email')}>\n                        </input>\n                    </div>\n                </div>  \n                <div className=\"wrapper\">\n                    <div className=\"input-container\">\n                        <div className=\"input-label\">\n                            <span >password</span>\n                            {formik.touched.password && formik.errors.password ? \n                                <span className=\"error-span\">{formik.errors.password}</span>\n                            : null}\n                        </div>\n                        <input type=\"password\" name=\"password\" {...formik.getFieldProps('password')}>\n                        </input>\n                    </div>\n                </div> \n                <div className=\"wrapper\">\n                    <div className=\"input-container\">\n                        <button type=\"submit\" >LOGIN </button>\n                    </div>\n                </div>    \n                <div style={{ position: 'relative', zIndex: '1', visibility: loaderVisibility }} className=\"wrapper\">\n                <Loader\n                    type=\"Bars\"\n                    color=\"#1B7EC2\"\n                    height={50}\n                    width={50}\n                />\n                </div>\n            </form>\n    );\n    }\n\n    export default LoginForm;\n\n    ","import React, {Component} from 'react';\n\nimport RegisterForm from './registerForm';\nimport LoginForm from './loginForm';\nimport './index.scss';\nimport loginPerson from '../../assets/login-person.svg';\nimport loginFlower from '../../assets/login-flower.svg';\nimport homePicture from '../../assets/home-picture.svg';\n\nexport default class Auth extends Component {\n\n    state = {\n        loginActive: this.props.loginActive,\n    }\n\n    changeAuthActiveState = () => {\n        const {loginActive} = this.state;\n        this.setState({loginActive: !loginActive});\n    }\n\n    render () {\n        const {loginActive} = this.state;\n        return (\n            <div className=\"auth-page\" style={{backgroundImage:`url(${loginPerson})`, backgroundPosition: '100% 5%', backgroundRepeat: \"no-repeat\"}}>\n                <img id=\"auth-flower\" src={loginFlower} alt=\"login flower\" /> \n                    {loginActive ? \n                        <div><LoginForm changeAuthActiveState={this.changeAuthActiveState} /></div> \n                            : \n                        <div><RegisterForm changeAuthActiveState={this.changeAuthActiveState}/></div>}\n            </div>\n            )\n        };\n}","import React from 'react';\nimport './index.scss';\n\n\nconst Hamberger = props => {\n\n    const OPEN_CLASS = 'open';\n    const offClick = event => {\n        const menu = document.getElementsByClassName(OPEN_CLASS);\n        menu[0] && menu[0].classList.toggle(OPEN_CLASS);\n        document.removeEventListener('click', offClick)\n    }\n\n    const {className} = props\n    \n    const handleOnclick = event => {\n\n        const menu = event.target.parentElement;\n        menu.classList.toggle(OPEN_CLASS)\n        if (menu.classList.contains(OPEN_CLASS) ){\n            document.addEventListener('click', offClick)\n        }\n    }\n    return (\n        <div id=\"nav-icon1\" onClick={handleOnclick} className={className}>\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n    )\n};\n\nexport default Hamberger\n\n","import React, { Component } from 'react';\n\nimport Footer from './../../components/footer';\nimport UssdProductPage from './../../components/productsPages/ussd';\nimport BulkSmsProductPage from './../../components/productsPages/bulksms.js';\nimport LandingPage from '../../components/landing-page';\nimport Auth from '../auth';\nimport logo from '../../assets/logo.svg';\nimport './index.scss';\nimport Hamberger from '../../components/hamberger';\nimport { HashLink as Link } from 'react-router-hash-link';\n\nconst navItemStyle = {\n        color: '#1B7EC2',\n        fontWeight: 600,\n        cursor: 'pointer',\n        borderRadius: '5px',\n    }\n\n\nexport default class Homepage extends Component {\n    state = {\n        activeComponent: this.props.activeComponent,\n        loginActive: this.props.loginActive\n    }\n\n    componentDidMount() {\n        // eslint-disable-next-line no-undef\n        componentHandler.upgradeDom()\n    }\n    \n    renderActiveComponent = () => {\n        let loginActive = true;\n        (this.state.loginActive == null) ? loginActive = true: loginActive = this.state.loginActive;\n        const { activeComponent } = this.state;\n        switch (activeComponent) {\n            case 'ussd-product-page':\n                return <UssdProductPage />;\n            case 'bulk-sms-product-page':\n                return <BulkSmsProductPage />;\n            case 'landing-page':\n                return <LandingPage routeToRegister={this.routeToRegister}/>;\n            case 'auth':\n                return <Auth loginActive={loginActive}/>;\n            default:\n                return <LandingPage />;\n        }\n    }\n\n    routeToRegister = () => {\n        this.setState({\n            activeComponent: 'auth',\n            loginActive: false\n        });\n    }\n\n    onhover = e => {\n    }\n\n    onMouseLeave = e => {\n        e.target.style.background = '#ffffff'; \n        e.target.style.color = '#1B7EC2';\n    }\n\n    render() {\n        return(\n            <div className=\"mdl-layout__container home-page\"> \n            <div className=\"mdl-layout mdl-js-layout mdl-layout--fixed-header\">\n            <header className=\"mdl-layout__header mdl-layout__header--transparent\">\n                <div className=\"mdl-layout__header-row\">\n                {/* <!-- Title --> */}\n                <span className=\"mdl-layout-title\"><span style={{color: '#1B7EC2', fontWeight: 700, cursor: 'pointer'}}><img src={logo} onClick={() => this.setState({activeComponent: 'landing-page'})} className=\"logo\" alt=\"Jambo SMS\"/></span></span>\n                {/* <!-- Add spacer, to align navigation to the right --> */}\n                <div className=\"mdl-layout-spacer\"></div>\n                {/* <!-- Navigation --> */}\n                    <nav className=\"mdl-navigation\">\n                    <span style={navItemStyle} className=\"nav-link mdl-navigation__link navigation-link\" onMouseOver={this.onhover} onMouseLeave={this.onMouseLeave} onClick={() => this.setState({activeComponent: 'landing-page'})}>Home</span>\n                    <Link smooth to=\"/#about-sect\"><span style={navItemStyle} onMouseOver={this.onhover} onMouseLeave={this.onMouseLeave} className=\"nav-link mdl-navigation__link \">About</span></Link>\n                        <span style={{display: 'none'}} className=\"nav-link mdl-navigation__link navigation-link\"> \n                            <button id=\"demo-menu-lower-left\" className=\"mdl-button mdl-js-button\" style={{color: '#1B7EC2', fontWeight: 550, textTransform: 'capitalize'}} >Products</button>\n                            <ul className=\"mdl-menu mdl-menu--bottom-left mdl-js-menu mdl-js-ripple-effect\"\n                                for=\"demo-menu-lower-left\">\n                                <li><span style={{color: '#1B7EC2'}}  className=\"mdl-menu__item\" onClick={() => this.setState({activeComponent: 'ussd-product-page'})}>USSD</span></li>\n                                <li><span  style={{color: '#1B7EC2'}} className=\"mdl-menu__item\" onClick={() => this.setState({activeComponent: 'bulk-sms-product-page'})}>Bulk SMS </span> </li>\n                            </ul>\n                        </span>\n                        <Link smooth to=\"/#pricing-sect\"><span style={navItemStyle} onMouseOver={this.onhover} onMouseLeave={this.onMouseLeave} className=\"nav-link mdl-navigation__link \">Pricing</span></Link>\n                        <span style={navItemStyle} onMouseOver={this.onhover} onMouseLeave={this.onMouseLeave} className=\"nav-link mdl-navigation__link \" onClick={() => this.setState({activeComponent: 'auth'})}>Login</span>\n                    </nav>\n                <div><span style={navItemStyle} className=\"nav-link mdl-navigation__link navigation-link\"> \n                            <button id=\"menu\"  ><Hamberger className=\"hamberger\" /></button>\n                            <ul className=\"mdl-menu mdl-menu--bottom-right mdl-js-menu mdl-js-ripple-effect\"\n                                for=\"menu\">\n                                <li><span style={navItemStyle} className=\"nav-link mdl-navigation__link navigation-link\" onClick={() => this.setState({activeComponent: 'landing-page'})}>Home</span></li>\n                                <li><span style={{color: '#1B7EC2', display: 'none'}}  className=\"mdl-menu__item\" onClick={() => this.setState({activeComponent: 'ussd-product-page'})}>Product: USSD</span></li>\n                                <li><span  style={{color: '#1B7EC2', display: 'none'}} className=\"mdl-menu__item\" onClick={() => this.setState({activeComponent: 'bulk-sms-product-page'})}>Product: Bulk SMS </span> </li>\n                                <li><span style={navItemStyle} className=\"nav-link mdl-navigation__link \">Pricing</span></li>\n                                <li><span style={navItemStyle} className=\"nav-link mdl-navigation__link \">About</span></li>\n                                <li><span style={navItemStyle} className=\"nav-link mdl-navigation__link \" onClick={() => this.setState({activeComponent: 'auth', loginActive: true})}>Login</span></li>\n                            </ul>\n                        </span></div>\n                </div>\n            </header>\n                <main className=\"mdl-layout__content\">\n                    {this.renderActiveComponent()}\n                    <Footer />\n                </main>\n            </div>\n            </div>\n        );\n    \n    }\n}\n","import React from 'react';\nimport { Form, Button, Input, Col, Row } from 'antd';\nimport { phoneNumberIsValid } from '../validation'\nimport { number } from 'yup';\n\nconst layout = {\n    labelCol: { span: 6 },\n    wrapperCol: { offset: 2, span: 15 },\n  };\nconst tailLayout = {\n    wrapperCol: { offset: 19, span: 16 },\n  };\n\n\nconst SMSContactItem = () => {\n\n\n    return (\n        <Form.Item\n                label=\"Phone Number\"\n                name=\"phoneNumber\"\n                rules={[\n                    { required: true, message: \"Please enter member's phone number!\",\n                    },\n                    () => ({\n                        validator(rule, value) {\n                        if (value.match(/^\\d{9}$/g)) {\n                            return Promise.resolve();\n                        }\n                        return Promise.reject('Enter correct format(9 digits): e.g 723456897');\n                        },\n                    })\n                \n                ]}\n            >\n            \n                    <Input addonBefore=\"254\" placeholder=\"724568924\" />\n        \n            \n            </Form.Item>\n    );\n\n}\n\n\nconst EmailContactItem = () => {\n\n\n    return (\n        <Form.Item\n                label=\"Email\"\n                name=\"email\"\n                rules={[\n                    { required: true, message: \"Please enter member's email!\",\n                    type: 'email'\n                    }\n                ]}\n            >\n            \n                    <Input placeholder=\"terrio.gmail.com\" />\n        \n            \n            </Form.Item>\n    );\n\n};\n\n\n\nconst NewMemberForm = (props) => {\n    const [form]  = Form.useForm();\n\n    const { onFinish,  onFinishFailed, mode } = props;\n    return(\n        <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: false }}\n            onFinish={async values => {\n                await onFinish(values);\n                form.resetFields();\n            }}\n            onFinishFailed={onFinishFailed}\n            form={form}\n            >\n            <Form.Item\n                label=\"First Name\"\n                name=\"firstName\"\n                rules={[{ required: true, message: \"Please input member's first name!\" }]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Second Name\"\n                name=\"secondName\"\n                rules={[{ required: true, message: \"Please input member's second name!\" }]}\n            >\n                <Input />\n            </Form.Item>\n\n            {mode==='sms'?<SMSContactItem />: <EmailContactItem />}\n\n            <Form.Item {...tailLayout}>\n                <Button style={{ backgroundColor: '#00A0D3', color: 'white'}} type=\"primary\" htmlType=\"submit\">\n                Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n\nexport default NewMemberForm;\n","import React from 'react';\nimport { Form, Input, Button } from 'antd';\n\n\nconst layout = {\n    labelCol: { span: 5 },\n    wrapperCol: { offset: 2, span: 16 },\n  };\n  const tailLayout = {\n    wrapperCol: { offset: 19, span: 16 },\n  };\n\n\nconst NewGroupForm = (props) => {\n\n    const { onFinish, onFinishFailed, form } = props;\n\n    return(\n        <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{ remember: false }}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        form={form}\n        >\n            <Form.Item\n                label=\"Group Name\"\n                name=\"groupName\"\n                rules={[{ required: true, message: 'Please input your group name!' }]}\n            >\n                    <Input />\n            </Form.Item>\n\n            <Form.Item\n                label=\"Description\"\n                name=\"description\"\n                rules={[{ required: true, message: 'Please input your group description!' }]}\n            >\n                <Input />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n                <Button style={{ backgroundColor: '#00A0D3', color: 'white'}} type=\"primary\" htmlType=\"submit\">\n                Submit\n                </Button>\n            </Form.Item>\n    </Form>\n    );\n}\n\nexport default NewGroupForm;\n","import React, {useState} from 'react';\n\nimport { Row, Col, Table, Button, Modal, Input, Form} from 'antd';\nimport { UsergroupAddOutlined } from '@ant-design/icons';\n\nimport NewGroupForm from '../forms/groupsForms/newGroupForm';\nimport groupIcon from '../../assets/group-icon.svg';\nimport deleteIcon from '../../assets/delete-icon.svg';\nimport {connect} from 'react-redux';\n\nimport GroupService from '../../services/groupsServices';\nimport { fetchGroupMembers } from '../../redux/action-creator';\n\nconst { Search } = Input;\n\nconst groupIconStyle = {\n  height: '30px',\n\n};\n\nconst groupNameStyle = {\n  fontWeight: 700,\n\n};\n\nconst deleteIconStyle = {\n  height: '15px',\n  cursor: 'pointer'\n}\n\n\nconst GroupsTable = props => {\n  const { filteredGroups, groups, mode, columns, parentComponentObject } = props;\n  return (\n    <Table columns={columns} dataSource={filteredGroups? filteredGroups: groups} \n                rowClassName={(record, index) => index === parentComponentObject.state.activeGroupIndex ? 'active-group-row' : null}\n                onRow={(record, rowIndex) => {\n                    return {\n                      onClick: event => {\n                        parentComponentObject.setState({activeGroupIndex: rowIndex});\n                        props.fetchGroupMembers(groups[rowIndex].id, mode);\n                      }\n                    };\n                  }}\n            />\n  )\n}\n\nexport const DeleteButton = props => {\n\n  const { mode, itemId, deleteIconStyle, deleteFunction, updateGroups } = props;\n  \n  const deleteItem = async event => {\n    const response = await deleteFunction(itemId, mode);\n    updateGroups();\n  }\n  \n  return (<span>\n  <img onClick={deleteItem} alt={'delete icon'} src={deleteIcon} style={deleteIconStyle} />\n  </span>);\n};\n\nconst GroupSection = props => {\n\n    const { parentComponentObject, groups, mode } = props;\n    const [ form ] = Form.useForm();\n    groups && groups.map(group => {group.memberNo = group.members.length});\n\n    const [filteredGroups, setGroups] = useState(null);\n    const [addGroupVisible, showAddGroupModal] = useState(false);\n    const filterGroups = (e) => {\n      const value = e.target.value;\n      e.preventDefault();\n      const filteredGroups = groups.filter(\n          eachGroup => eachGroup.name.toLowerCase().includes(value.toLowerCase())\n      );\n      \n      value? setGroups(filteredGroups): setGroups(null);\n\n    };\n\n    const onFinish = async (values) => {  \n      const response = await GroupService.postNewGroup(values, mode);\n      const fetchCurrentGroupsFunc = parentComponentObject.getCurrentGroupsFunc();\n      fetchCurrentGroupsFunc();\n      if (response){\n          showAddGroupModal(false);\n          form.resetFields();\n      };\n    }\n\n    const columns = [\n        {\n          title: '',\n          width: 50,\n          dataIndex: 'group-icon',\n          render:  () => <img alt={'group icon'} src={groupIcon} style={groupIconStyle} />\n      },\n        {\n      dataIndex: 'name',\n      key: 'name',\n      width: 200,\n      render: text => (\n        <span style={groupNameStyle}>{text}</span>\n      )\n        },\n    {\n      dataIndex: 'memberNo',\n      key: 'memberNo',\n      width: 500,\n      render: text => (\n        <span>{text} members</span>\n      )\n    },\n    {\n      dataIndex: 'id',\n      key: 'id',\n      width: 100,\n      render: text => (\n        <DeleteButton itemCategory=\"group\" itemId={text} \n        deleteIconStyle={deleteIconStyle}\n        mode={mode} \n        deleteFunction={GroupService.deleteGroup} \n        updateGroups={parentComponentObject.getCurrentGroupsFunc()}/>\n      )\n    },\n  ];  \n    return (\n      <>\n      <Row gutter={30} style={{ backgroundColor: '#fff!important'}}>\n          <Col span={12} style={{ backgroundColor: '#fff!important'}}>\n            <Search placeholder=\"search groups\" onChange={filterGroups} />\n          </Col>\n          <Col span={6} offset={6}>\n            <Button type=\"primary\" \n            style={{ backgroundColor: '#00A0D3', color: 'white'}} \n            icon={<UsergroupAddOutlined />} \n            size={'medium'}  onClick={() => showAddGroupModal(true)}>\n            Add Group</Button>\n          </Col>\n          \n      </Row>\n      <Row>\n          <Col span={24}>\n                <Modal\n                    title=\"Add New Group\"\n                    visible={addGroupVisible}\n                    onOk={parentComponentObject.handleOk}\n                    onCancel={() => (showAddGroupModal(false))}\n                    footer={null}\n                    >\n                        <NewGroupForm onFinish={onFinish} form={form}/>\n                    </Modal>\n            <GroupsTable columns={columns} groups={groups}\n             filteredGroups={filteredGroups} fetchGroupMembers={props.fetchGroupMembers}\n              parentComponentObject={parentComponentObject} mode={mode} />\n          </Col>\n      </Row>\n      </>\n    )\n    }\n\n  const mapDispatchToProps = {\n      fetchGroupMembers,\n  }\n\n  const mapStateToProps = ({dashboardStoreState}) => (\n  {\n      ...dashboardStoreState\n  });\n  \n  export default connect(\n      mapStateToProps,\n      mapDispatchToProps\n  ) (GroupSection);\n  \n","import React from 'react';\nimport { Upload, message, Button } from 'antd';\nimport { UploadOutlined, FileAddOutlined } from '@ant-design/icons';\nimport { requestHeaderDetails } from '../../services/utils';\nimport { groupMembersCsvUrlMappingObject } from '../../services/urls';\n\nconst validFileExtensions = ['csv', 'xls', 'xlsx']\n\nconst vaildateCsvOrXlsFile = (file, fileList) => {\n  \n  const extension = file.name.split('.').pop();\n  if (validFileExtensions.includes(extension)){\n    return Promise.resolve()\n  } else {\n    message.error(`${file.name} not valid; use csv or excel files`);\n    return Promise.reject();\n  }\n}\n\nexport const UploadGroupsCsv = (props) => {\n    \n    const {getCurrentGroup, mode, fetchGroups, fetchGroupMembers} = props;\n    const url = groupMembersCsvUrlMappingObject[mode];\n    const group = getCurrentGroup();\n    const properties = {\n        name: 'file',\n          data: {\n          group, mode,\n        },\n        action: url,\n        ...requestHeaderDetails(),\n        beforeUpload: vaildateCsvOrXlsFile,\n\n        onChange(info) {\n          if (info.file.status !== 'uploading') {\n          }\n          if (info.file.status === 'done') {\n            message.success(`File(${info.file.name}) uploaded successfully`);\n            fetchGroups();\n            fetchGroupMembers(group, mode);\n          } else if (info.file.status === 'error') {\n            message.error(info.file.response.detail);\n          }\n          \n        },\n\n        \n      };\n\n   return (\n        <Upload {...properties}>\n          <Button type=\"link\"  size={'large'} block icon={<FileAddOutlined />}> <span style={{paddingTop: '5px'}}>upload </span> </Button>\n        </Upload>\n        )};\n","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\n\nimport { Row, Col, notification, Tabs, Table, Button, Modal, Typography} from 'antd';\nimport { UserAddOutlined } from '@ant-design/icons';\n\nimport GroupService from '../../services/groupsServices';\nimport { fetchSMSGroups, fetchEmailGroups, fetchGroupMembers } from './../../redux/action-creator';\nimport NewMemberForm from '../forms/groupsForms/newMemberForm';\nimport GroupSection from './GroupSection';\nimport { UploadGroupsCsv } from './upload'; \nimport './index.scss';\nimport deleteIcon from '../../assets/delete-icon.svg';\n\n\nconst { TabPane } = Tabs;\nconst { Title } = Typography;\n\n\nclass Groups extends Component {\n    state = {\n        smsGroups: [],\n        emailGroups: [],\n        searching: false,\n        groupActiveSms: true,\n        activeGroupIndex: 0,\n        activeGroupMembers: [],\n        visible: false,\n        contactTitle: 'Phone',\n        mode: 'sms',\n        currentGroups: [],\n        selectedRowKeys: []\n    }\n\n    componentDidMount () {\n        const {fetchEmailGroups, fetchSMSGroups} = this.props;\n        fetchEmailGroups();\n        fetchSMSGroups();\n      }\n\n      onFinishGroupMember = async (values) => {\n        const { fetchGroupMembers } = this.props;\n        values.phoneNumber = '+254' + values.phoneNumber;\n        const groups  = this.getCurrentGroups();\n        const response = await GroupService.postNewMember({group: groups[this.state.activeGroupIndex].id, ...values}, this.state.mode);\n        const fetchCurrentGroupsFunc = this.getCurrentGroupsFunc();\n        fetchCurrentGroupsFunc();\n        const mode = this.state.mode;\n        fetchGroupMembers(groups[this.state.activeGroupIndex].id, mode);\n        if (response) {\n            this.setState({\n                    visible: false,\n                  });\n        }\n        \n      };\n    \n      onFinishGroupMemberFailed = errorInfo => {\n        this.openNotificationWithIcon('error', 'Groups', 'Error occurred try to add group member again.');\n   \n      };\n\n      openNotificationWithIcon = (type, message, description) => {\n        notification[type]({\n          message: message,\n          description:\n            description,\n        });\n      };\n    \n\n    changeModalState = (formId) => {\n        var dialog = document.querySelector(formId);\n        dialog.showModal();\n    }\n\n    getCurrentGroups = () => {\n      const { smsGroups, emailGroups } = this.props;\n      const { contactTitle } = this.state;\n      const currentGroupsMapper = {\n        'Phone': smsGroups,\n        'Email': emailGroups\n      };\n  \n      return currentGroupsMapper[contactTitle];\n  \n    }\n\n    getCurrentGroup = () => {\n      const groups = this.getCurrentGroups();\n      let group = null;\n      groups?group = groups[this.state.activeGroupIndex]: group = null;\n      group?group = group.id: group = null;\n      return group;\n    }\n\n    getCurrentGroupsFunc = () => {\n      const { fetchSMSGroups, fetchEmailGroups } = this.props;\n      const currentGroupsFuctionMapper = {\n        'Phone': fetchSMSGroups,\n        'Email': fetchEmailGroups\n      }\n      return currentGroupsFuctionMapper[this.state.contactTitle]\n\n    }\n\n\n\n    onTabSwitch = activeKey => {\n      let mode;\n      let groups;\n      const { smsGroups, emailGroups } = this.props;\n\n      this.setState({activeGroupIndex: []});\n      \n        if (activeKey === \"1\") {\n          mode = 'sms';\n          groups = smsGroups;\n          this.setState({\n            contactTitle: 'Phone',\n            mode,\n          })} else {\n            mode = 'email';\n            groups = emailGroups;\n            this.setState({\n              contactTitle: 'Email',\n              mode,\n            });\n        }\n        this.setState({\n          activeGroupIndex: 0\n        })\n        const { fetchGroupMembers } = this.props;\n        if (groups.length > 0) { fetchGroupMembers(groups[0].id, mode) }\n    }\n\n    onCheckboxChange = (selectedRowKeys) => {\n        this.setState({selectedRowKeys});\n        console.log(selectedRowKeys)\n    }\n\n    onRemoveMembersClick = async event => {\n      const { fetchGroupMembers } = this.props;\n      const groups = this.getCurrentGroups();\n      let group = null;\n      groups?group = groups[this.state.activeGroupIndex]: group = null;\n      const mode = this.state.mode;\n      await GroupService.removeGroupMembers(this.state.selectedRowKeys, group, mode);\n      this.state.selectedRowKeys && fetchGroupMembers(groups[this.state.activeGroupIndex].id, mode);\n      this.setState({ selectedRowKeys: [] });\n      fetchGroupMembers(this.getCurrentGroup(), mode);\n      this.getCurrentGroupsFunc()();\n      \n    }\n  \n    render() {\n      const contactKey = this.state.contactTitle.toLocaleLowerCase()\n      const {emailGroups, smsGroups, activeGroupMembers, fetchGroupMembers } = this.props;\n      activeGroupMembers && activeGroupMembers.map(member => {\n        member.key = member.id;\n\n      }) \n\n      if (!activeGroupMembers && this.getCurrentGroup()) {\n        fetchGroupMembers(this.getCurrentGroup(), this.state.mode)\n      }\n      const deleteButtonStyle = {\n        height: '17px',\n        cursor: 'pointer'\n      }\n      const activeUserColumns = [{\n            title: 'First Name',\n            dataIndex: 'first_name',\n          },{\n          title: 'Last Name',\n          dataIndex: 'last_name',\n        },\n        {\n            title:  this.state.contactTitle,\n            dataIndex: contactKey,\n    \n          }]\n\n      \n      \n\n        const mode = this.state.mode;\n        const { selectedRowKeys } = this.state;\n        const rowSelection = {\n          selectedRowKeys,\n          onChange: this.onCheckboxChange,\n        };\n\n\n        return(\n            <Row gutter={[16, 16]}>\n            <Col xs={24} sm={24} md={12} lg={12} xl={12}>\n                <Row>\n                    <Col span={24}>\n                        <Title level={4}>Groups</Title>\n                    </Col>\n                </Row>\n              <Tabs defaultActiveKey=\"1\" onChange={this.onTabSwitch}>\n                <TabPane\n                  tab={\n                    <span style={{marginLeft: '30px'}}>\n                      <i class=\"fa fa-comments-o\" aria-hidden=\"true\"></i>\n                        <span style={{marginLeft: '15px'}}>SMS</span>\n                    </span>\n                  }\n                  key=\"1\">\n                    <GroupSection groups={smsGroups} parentComponentObject={this} mode={mode} />\n                </TabPane>\n                <TabPane\n                  tab={\n                    <span style={{marginLeft: '30px'}}>\n                      <i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>\n                        <span style={{marginLeft: '15px'}}>EMAIL</span>\n                    </span>\n                  }\n                  key=\"2\"\n                >\n                  <GroupSection groups={emailGroups} parentComponentObject={this} mode={mode} />\n                </TabPane>\n              </Tabs>\n\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={12} xl={12} style={{background: '#f5f5f5'}}>\n                 <Row>\n                      <Col span={24}>\n                      <Title level={4}>Members</Title>\n                      </Col>\n                  </Row>\n                  <Row>\n                      <Col span={8}>\n                      <Button onClick={this.onRemoveMembersClick} type=\"link\" style={{marginLeft: '5px', marginTop: '10px', color: 'red'}}>\n                        <img alt={'delete icon'} src={deleteIcon} style={deleteButtonStyle} />&nbsp;delete\n                        </Button>\n                      </Col>\n                      <Col span={8}>\n                        <Button type=\"link\" icon={<UserAddOutlined />}  size={'large'} block onClick={() => this.setState({visible: true})}><span style={{paddingTop: '5px'}}>add</span></Button>\n                      </Col>\n                      <Col span={8}>\n                        <UploadGroupsCsv getCurrentGroup={this.getCurrentGroup} fetchGroups={this.getCurrentGroupsFunc()} fetchGroupMembers={this.props.fetchGroupMembers} mode={mode}/>\n                      </Col>\n                  </Row>\n                  <Row>\n                      <Col span={24}>\n                      <Modal\n                        title=\"Create New Group Member\"\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={() => this.setState({visible: false})}\n                        footer={null}\n                        >\n                            <NewMemberForm onFinish={this.onFinishGroupMember} onFinishFailed={this.onFinishGroupMemberFailed} mode={this.state.mode} />\n                        </Modal>\n                            <Table columns={activeUserColumns} dataSource={activeGroupMembers} rowSelection={rowSelection}/>\n                      </Col>\n                  </Row>\n            </Col>\n          </Row>\n        );\n    }\n}\n\nconst mapDispatchToProps = {\n    fetchEmailGroups,\n    fetchSMSGroups,\n    fetchGroupMembers,\n}\n\nconst mapStateToProps = ({dashboardStoreState}) => (\n{\n    ...dashboardStoreState\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n) (Groups);\n","import React from 'react';\n\nimport { Form, Input, Button } from 'antd';\n\nconst { TextArea } = Input;\nconst layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 20 },\n    };\n\nconst tailLayout = {\n    wrapperCol: { offset: 0, span: 16 },\n    };\n\n\nconst CreateTemplateForm  = (props) => {\n    \n    const { message, onFinish, form } = props;\n    form.setFieldsValue({message: message});\n    return (\n        <Form {...layout} form={form} name=\"create-template\" onFinish={onFinish}>\n            <div className=\"template-form-container\">\n            <span>Name</span>\n            <Form.Item name=\"name\" rules={[{ required: true }]}>\n            <Input />\n            </Form.Item>\n            <span>Message</span>\n            <Form.Item name=\"message\" rules={[{ required: true }]}>\n                <TextArea />\n            </Form.Item>\n            </div>\n                <Form.Item {...tailLayout}>\n                <Button type=\"primary\" htmlType=\"submit\" style={{ backgroundColor: '#00A0D3', color: 'white'}}>\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n        )\n    }\n\nexport default CreateTemplateForm;","import React, { useState, useEffect } from 'react';\nimport MessageService from '../../../services/messageServices';\nimport CreateTemplateForm from './createTemplateForm';\n\nimport './sendForms.scss';\n\n\nimport { Button, Select, Modal, Form } from 'antd';\n\nconst selectStyle = {\n    flex: \"none\",\n    order: \"0\",\n    alignSelf: \"center\",\n    marginRight: \"32px\",\n    width: \"150px\",\n    color: \"black\"\n}\n\nconst buttonStyle = {\n    flex: \"none\",\n    order: \"1\",\n    alignSelf: \"center\",\n    marginRight: \"32px\",\n}\nconst { Option } = Select;\n\nconst TemplateButtons = (props) => {\n\n\n    const [templates, setTemplates] = useState([]);\n    const [visible, toggleModal] = useState(false);\n    \n    const { form } = props;\n    const [templateForm] = Form.useForm()\n\n    useEffect( () => {\n    async function fetchTemplates(){\n        \n        const data = await MessageService.fetchTemplates();\n        \n        data && setTemplates(data.results.map(template => <Option value={template.message} key={template.id}>{template.name}</Option>))\n    }\n    fetchTemplates();\n    \n    }, []);\n\n    \n    const saveTemplate = async values => {\n        const response = await MessageService.createTemplate(values);\n        templateForm.resetFields();\n        toggleModal(false);\n    }\n\n    const showModal = ()=> {\n        toggleModal(true)\n    }\n\n    const setMessage = selected => {\n        form.setFieldsValue({\n            'message': selected\n        })\n    }\n\n    const handleCancel = () => {\n        toggleModal(false);\n        templateForm.resetFields();\n    }\n\n    return (\n    <div id=\"template-bns\">\n        <Select name='select-tmplt' style={selectStyle} children={templates} placeholder='Select Template' onSelect={setMessage}/>\n        <Button name=\"save-tmplt\"  style={buttonStyle} onClick={showModal}>Save as Template</Button>\n        <Modal\n          visible={visible}\n          title=\"Save Template\"\n          onCancel={handleCancel}\n          footer={null}\n        >\n        <CreateTemplateForm message={form.getFieldValue('message')} onFinish={saveTemplate} form={templateForm}/>\n        </Modal>\n    </div>)\n}\n\nexport default TemplateButtons;\n","import React from 'react';\nimport TemplateButtons from './templateButtons';\n\nimport { Form, Input, Button, Select } from 'antd';\n\nconst { Option } = Select;\n\nconst { TextArea } = Input;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 20 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 16 },\n};\n\nconst SendSMSForm = (props) => {\n  \n  const { groups, form, onFinish } = props\n\n  return (\n    <Form {...layout} form={form} name=\"send-sms\" onFinish={onFinish}>\n        <div style={{padding: '3% 4% 0% 4%'}}><h5 style={{margin: '0'}}>Send SMS</h5></div>\n        <div className=\"form-container\">\n        <span>Select groups</span>\n        <Form.Item name=\"groups\" rules={[{ required: false }]}>\n        <Select children={groups} mode=\"multiple\" placeholder='Select groups'/>\n        </Form.Item>\n        <span>Add recipients</span>\n        <Form.Item name=\"recipients\" \n        rules={[{ required: false },]}\n\n        >\n            <Input />\n        </Form.Item>\n        <TemplateButtons form={form} />\n        <span>Message</span>\n        <Form.Item name=\"message\" rules={[{ required: true, message: \"Please enter message\" }]}>\n            <TextArea rows={5}/>\n        </Form.Item>\n        <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" style={{ backgroundColor: '#00A0D3', color: 'white'}}>\n          Send\n        </Button>\n      </Form.Item>\n      </div>\n    </Form>\n  );\n};\n\nexport default SendSMSForm\n","import React from 'react';\nimport './sendForms.scss';\nimport TemplateButtons from './templateButtons';\n\nimport { Form, Input, Button, Select } from 'antd';\n\n\nconst { TextArea } = Input;\n\nconst layout = {\n  labelCol: { span: 8 },\n  wrapperCol: { span: 20 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 0, span: 16 },\n};\n\nconst SendEmailForm = props => {\n\n    const { groups, form, onFinish } = props\n\n    return (\n        <Form {...layout} form={form} name=\"send-mail\" onFinish={onFinish}>\n            <div className=\"form-header\"><h5>Send Email</h5></div>\n            <div className=\"form-container\" id=\"email-container\">\n            <span>Select groups</span>\n            <Form.Item name=\"groups\" rules={[{ required: false }]}>\n            <Select children={groups} mode=\"multiple\" placeholder='Select groups'/>\n            </Form.Item>\n            <span>Add recipients</span>\n            <Form.Item name=\"recipients\" rules={[\n                { required: false },\n                () => ({\n                        validator(rule, value) {\n                        if (value.match(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)) {\n                            return Promise.resolve();\n                        }\n                        return Promise.reject('Enter correct email');\n                        },\n                    })]}>\n                <Input />\n            </Form.Item>\n            <span>Subject</span>\n            <Form.Item name=\"subject\" rules={[{ required: true, message: 'Please enter subject' }]}>\n                <Input />\n            </Form.Item>\n            <TemplateButtons form={form} />\n            <span>Message</span>\n            <Form.Item name=\"message\" rules={[{ required: true, message: 'Please enter message' }]}>\n                <TextArea rows={5}/>\n            </Form.Item>\n            <Form.Item {...tailLayout}>\n                <Button style={{ backgroundColor: '#00A0D3', color: 'white'}} htmlType=\"submit\">\n            Send\n            </Button>\n        </Form.Item>\n        </div>\n        </Form>\n    );\n    };\n\n    export default SendEmailForm\n","import React, { useState, useEffect } from 'react';\nimport Swal from 'sweetalert2';\nimport MessageService from '../../../services/messageServices';\nimport './sendForms.scss';\nimport GroupsService from '../../../services/groupsServices';\nimport SendSMSForm from './sendSMSForms';\nimport SendEmailForm from './sendEmailForm';\nimport { fireNotification } from '../../../services/utils';\n\nimport { Form, Select } from 'antd';\n\nconst { Option } = Select;\n\n\nconst SendForm = (props) => {\n\n    const [form] = Form.useForm();\n\n    const [groups, setGroups] = useState([]);\n    \n    const { mode } = props;\n\n    useEffect( () => {\n    async function getGroups(){\n        \n        const response = await GroupsService.fetchGroups(mode)\n        response && setGroups(response.data.map(group => <Option key={group.name + ',' + group.id}>{group.name}</Option>))\n    }\n    getGroups();\n    \n    }, []);\n\n    const onFinish = async values => {\n        if (!values.recipients && !values.groups) {\n            return Swal.fire({\n            title: 'Error!',\n            text: `No message receivers entered. You must either select groups or enter recipients, or both, to receive the message.`,\n            icon: 'error',\n            confirmButtonText: 'close',\n            })\n        }\n        \n        let {recipients, groups, message, subject} = values;\n        if (groups){\n            \n        }\n        groups ? groups = groups.map((string) => {\n            return parseInt(string.split(',')[1])\n        } ): groups = [];\n        let recepients;\n        recipients ? recepients = recipients.split(','): recepients = [];\n\n        const status = await MessageService.sendMessage({groups, recepients, message, subject});\n\n        (status !== 200) && form.resetFields();\n        \n        \n    };\n\n    let currentForm;\n    const formProps = { form, onFinish, groups }\n    //choose form (email or sms send form)\n    mode === 'sms'? currentForm = <SendSMSForm { ...formProps }/>:\n     currentForm = <SendEmailForm { ...formProps }/>;\n\n    return currentForm\n}\n\nexport default SendForm;\n","import React, { useEffect } from 'react';\nimport {connect} from 'react-redux';\n\nimport {  Tabs, Row, Col, message} from 'antd';\n\nimport './index.scss'\nimport SendForm from '../forms/sendForms/sendForm';\nimport { truncate } from '../../services/utils';\nimport { fetchSMSHistory, fetchEmailHistory, changeCurrentMessages } from './../../redux/action-creator';\n\nconst { TabPane } = Tabs;\n\nconst messagesTabMapper = {\n    1: 'sms',\n    2: 'emails'\n}\n\nconst messageHistoryStyle = {\n    /* Rectangle 102 */\n    width: '100%',\n    height: '75px, auto',\n    left: '0px',\n    top: '0px',\n    marginBottom: '10px',\n\n    /* Primary color - clients Dash */\n\n    background: '#00A0D3',\n    borderRadius: '5px',\n    paddingTop: \"5px\",\n    color: \"white\",\n    paddingBottom: \"5px\"\n}\n\nconst timeSpanStyle = {\n    fontSize: \"10px\",\n    display: \"none\"\n}\n\n\nconst MessagesColumn = props => {\n    const { messages, currentMessages } = props\n    const messagesToDisplay = messages[currentMessages]\n    const children = messagesToDisplay.map(message => {\n        message.message = truncate(message.message, 25, true)\n        return (<Col style={messageHistoryStyle} key={message.id}>\n            <Row><Col offset={15} style={timeSpanStyle}>33 min ago</Col></Row>\n            <Row>\n                <span><i className=\"fa fa-comments-o\" aria-hidden=\"true\"></i> Message: &nbsp; </span>\n                {message.message}\n            </Row>\n            <Row><span><i className=\"fa fa-users\" aria-hidden=\"true\"></i> Recipients: &nbsp; </span>\n                {message.recepients.length}\n            </Row>\n        </Col>);\n    }\n    );\n    return (\n        <Col>\n            <div id={'history-header'}><span className={\"header\"}><h6>Message History</h6></span></div>\n            <div className={\"msg-history\"}>\n            { children }\n            </div>\n        </Col>\n    )\n    }\n\n\nconst Send =  props => {\n\n        const { emails, sms, fetchSMSHistory, fetchEmailHistory, currentMessages, changeCurrentMessages } = props\n        const messages = {\n            emails,\n            sms\n        }\n\n        useEffect( () => {\n            fetchEmailHistory();\n            fetchSMSHistory();\n            \n            }, []);\n        \n        const onTabChange = key => {\n            changeCurrentMessages(messagesTabMapper[key]);    \n        }\n\n\n\n        return (\n        <Row gutter={16}>\n            <Col span={18}>\n                <Tabs defaultActiveKey=\"1\" onChange={onTabChange}>\n                    <TabPane\n                        tab={\n                        <span style={{marginLeft: '30px'}}>\n                            <i class=\"fa fa-comments-o\" aria-hidden=\"true\"></i>\n                            <span style={{marginLeft: '15px'}}>SMS</span>\n                        </span>\n                        }\n                        key=\"1\">\n                        <SendForm mode='sms'/>\n                    </TabPane>\n                    <TabPane\n                            tab={\n                                <span style={{marginLeft: '30px'}}>\n                                <i class=\"fa fa-envelope-o\" aria-hidden=\"true\"></i>\n                                    <span style={{marginLeft: '15px'}}>EMAIL</span>\n                                </span>\n                            }\n                            key=\"2\"\n                            >\n                            <SendForm mode='email'/>\n                    </TabPane>\n                </Tabs>\n            </Col>\n            <Col span={6}>\n                <MessagesColumn messages={messages} currentMessages={currentMessages}/>\n            </Col>\n        </Row>\n        )\n\n}\n\nconst mapDispatchToProps = {\n    fetchSMSHistory,\n    fetchEmailHistory,\n    changeCurrentMessages,\n}\n\nconst mapStateToProps = ({sendStoreState}) => ({\n    ...sendStoreState\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps,\n) (Send);\n","import axios from 'axios';\nimport Swal from 'sweetalert2';\nimport { ratesUrl, payMpesaUrl, publicKeyUrl } from './urls';\nimport { requestHeaderDetails, notificationHandler, encryptData, checkSessionStatus } from './utils';\n\n\n\nexport default class PaymentService {\n    static async fetchRates () {\n        \n        try {\n            const rates = await axios.get(ratesUrl, requestHeaderDetails());\n            return rates;\n\n        } catch (error) {\n            checkSessionStatus(error.response);\n            notificationHandler(error.response, 'error in fetching rates')\n            console.log('error in fetching rates', error);\n        }\n    }\n\n    static async pay (payload) {\n        \n        try {\n\n            const response = await axios.get(publicKeyUrl, requestHeaderDetails())\n            const publicKey = response.data.public_key;\n            payload.amount = encryptData(publicKey, payload.amount);\n            console.log(payload.amount);\n            const res = await axios.post(payMpesaUrl, payload, requestHeaderDetails());\n\n            Swal.fire({\n                title: 'Success!',\n                text: response.data.message,\n                icon: 'success',\n                confirmButtonText: 'ok',\n               \n            });\n            \n            return res;\n\n        } catch (error) {\n            checkSessionStatus(error.response);\n            notificationHandler(error.response, 'Error in payment, Please contact the Admin for further clarification');\n        }\n    }\n\n\n}\n","import React, { useState, useEffect } from 'react';\nimport PaymentService from '../../services/paymentServices';\n\nimport RechargeForm from '../forms/rechargeForm';\nimport {  Tabs, Row, Col } from 'antd';\n\nimport gold from '../../assets/gold.svg';\nimport silver from '../../assets/silver.svg';\nimport bronze from '../../assets/bronze.svg';\n\n\n\nconst rateColors = [\n    gold, silver, bronze\n]\n\nconst rateColorStyle = {\n    width: '15px',\n}\n\nconst ratesStyle = {\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    padding: '10px',\n    marginLeft: '20px',\n    width: \"76%\"\n}\n\nconst smsCalculatorStyle = {\n    backgroundColor: 'white',\n    borderRadius: '5px',\n    padding: '10px',\n    width: '250px'\n}\n\nconst rateRowStyle = {\n    borderBottom: '1px solid #B6BCC9'\n}\n\nconst rechargeStyle = {\n    backgroundColor: 'whitesmoke',\n    margin: '3px',\n    borderRadius: '5px',\n    padding: '5px',\n    height: '450px',\n    padding: '40px'\n}\n\n\nconst Rates = props => {\n\n    const { rates } = props;\n\n    rates.sort((a, b) => ( Number(a.rate) - Number(b.rate)));\n    const RateComponents = rates.map((rate, index) => {\n        let priceRange;\n        let previousIndex = null;\n        (index === 0)? priceRange = `${rate.price_limit} and above`: previousIndex = index - 1;\n        if (previousIndex !== null) {\n            priceRange = `${rate.price_limit} - ${rates[previousIndex].price_limit}`;\n        }\n        if (index === rates.length-1) {\n            priceRange = `0 - ${rates[index].price_limit}`;\n        }\n\n        return (<Row gutter={15} style={rateRowStyle} index={rate.id}>\n            <Col span={2}><img style={rateColorStyle} src={rateColors[index]} alt={'rate color'}/></Col>\n            <Col span={4} >{rate.name}</Col>\n            <Col span={10} style={{fontWeight: '600'}}>{priceRange}</Col>\n            <Col span={2} style={{fontWeight: '600'}}>{rate.rate}</Col>\n            <Col span={2} style={{fontWeight: '700'}}>&nbsp;&nbsp;&nbsp;Kes</Col>\n        </Row>\n        )\n        })\n\n\n   return (\n    <Col children={RateComponents}>\n\n    </Col>\n   )\n}\n\nconst SmsCalculator = props => {\n    const { rates, mpesaAmount } = props;\n    let calculatedRate; \n    let smsNo = 0;\n    if (rates.length > 0) {\n        calculatedRate = rates[0].rate;\n        const sortedRates = rates\n        sortedRates.sort((a, b) => (Number(b.rate) - Number(a.rate)));\n        sortedRates.map((rate) => {\n            \n        if (mpesaAmount >= rate.price_limit) {\n            calculatedRate = rate.rate\n        } \n    });\n    smsNo = Math.floor(mpesaAmount / calculatedRate);\n\n    }\n    \n\n    \n    return (\n        <Col span={24}>\n            <Row>\n    \n                <Col span={24}>Amount:&nbsp;Kes&nbsp;{mpesaAmount}</Col>\n                \n            </Row>\n            <Row>\n                <Col>Rate:&nbsp; {calculatedRate}</Col>\n\n            </Row>\n            <Row>\n                <Col span={24}>Total SMS: &nbsp; {smsNo}</Col>\n            </Row>\n                \n        </Col>\n    )\n    \n}\n\nconst Recharge = props => {\n    const [mpesaAmount, setAmount] = useState(null);\n    const [rates, setRates] = useState([]);\n\n    useEffect( () => {\n        async function getRates(){\n            \n        const response = await PaymentService.fetchRates();\n        setRates(response.data.results);        }\n        getRates();\n        \n        }, []);\n\n    return (\n        <Row style={rechargeStyle} gutter={50}>\n            <Col span={10}>\n              <RechargeForm setAmount={setAmount} />\n            \n            </Col>\n            <Col  span={8}>\n                <Row style={smsCalculatorStyle}><SmsCalculator  rates={rates} mpesaAmount={mpesaAmount}/></Row>       \n            </Col>\n            <Col style={ratesStyle}><span ><h6 style={{paddingLeft: '15px'}}>Rates</h6></span><Rates rates={rates}/></Col>\n        </Row>\n    )\n}\n\n\nexport default Recharge;\n","import React, { Component } from 'react';\nimport { Layout, Menu, PageHeader } from 'antd';\nimport { connect } from 'react-redux';\nimport { changeSessionStatus } from './../../redux/action-creator';\nimport { useHistory } from \"react-router-dom\";\nimport Groups from './../../components/groups';\nimport Send from './../../components/send';\nimport Recharge from '../../components/recharge';\nimport logo from '../../assets/logo.svg';\n\nimport './index.scss';\n\nconst { Content, Sider } = Layout;\n\nconst RouterComponent = props => {\n\n    const history = useHistory();\n    const { isSessionExpired, changeSessionStatus } = props;\n    isSessionExpired && history.push('/login');\n    changeSessionStatus(false);\n\n\n    return (<></>)\n}\n\nconst mapDispatchToProps = {\n    changeSessionStatus,\n}\n\nconst mapStateToProps = ({dashboardStoreState}) => {\n    const { isSessionExpired } = dashboardStoreState;\n    return { isSessionExpired };\n\n};\n\nconst RoutingComponent = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n) (RouterComponent);\n\nclass Dashboard extends Component {\n    state = {\n        activeNavItem: this.props.defaultSelectedKey,\n    }\n\n    componentDidMount (){\n        // eslint-disable-next-line no-undef\n        componentHandler.upgradeDom();\n    }\n\n    handleClickedNavItem = (e) => {\n        const itemClickedKey = e.key;\n        if (itemClickedKey){\n            this.setState({activeNavItem: itemClickedKey});\n        }\n    }\n\n    returnDynamicSection = () => {\n        const { activeNavItem } = this.state\n        switch (activeNavItem) {\n            case '2':\n                return Groups\n\n            case '1':\n                return Send\n            case '3':\n                return Recharge\n            default:\n                return Send \n        }\n    }\n\n\n    render(){\n        const { defaultSelectedKey } = this.props;\n        const CurrentComponent = this.returnDynamicSection();\n\n        return(\n            <Layout style={{height: '100vh'}}>\n            <RoutingComponent />\n            <Sider\n                breakpoint=\"lg\"\n                collapsedWidth=\"0\"\n                onBreakpoint={broken => {\n                }}\n                onCollapse={(collapsed, type) => {\n                }}\n                style={{ backgroundColor: '#00A0D3', color: 'white', borderTopRightRadius: '20px', borderBottomRightRadius: '20px'}}\n                >\n\n                <div className=\"logo\" />\n                <Menu mode=\"inline\" defaultSelectedKeys={[defaultSelectedKey]} style={{ marginTop: '200px', backgroundColor: '#00A0D3', color: 'white' }}>\n                  <Menu.Item onClick={this.handleClickedNavItem} key=\"1\" icon={<i className=\"fa fa-paper-plane\"></i>}>\n                        <span style={{marginLeft: '20px', fontWeight: 600}}>Send</span>\n                  </Menu.Item>  \n                  <Menu.Item onClick={this.handleClickedNavItem} key=\"2\" icon={<i className=\"fa fa-users\"></i>}>\n                        <span style={{marginLeft: '20px', fontWeight: 600}}>Groups</span>\n                  </Menu.Item>\n    \n                  <Menu.Item onClick={this.handleClickedNavItem} key=\"3\" icon={<i className=\"fa fa-money\"></i>}>\n                        <span style={{marginLeft: '20px', fontWeight: 600}}>Recharge</span>\n                  </Menu.Item>\n\n                </Menu>\n\n              </Sider>\n            \n              <Layout>\n                <PageHeader\n                  theme=\"dark\"\n                  ghost={false}\n                  onBack={() => window.history.back()}\n                  className=\"site-page-header\"\n                  style={{ paddingTop: '0'}}\n                >\n                <img src={logo} alt=\"Jambo SMS\"/>\n                </PageHeader>\n\n                <Content style={{ margin: '24px 16px 0', overflow: 'scroll', background: 'white', padding: '20px' }}>\n                   <CurrentComponent />\n                </Content>\n              </Layout>\n          </Layout>\n        );\n    }\n}\n\n\n\nexport default Dashboard;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch} from 'react-router-dom';\nimport AOS from 'aos';\nimport Homepage from './views/homepage';\nimport Dashboard from './views/dashboard';\nimport './App.css';\nimport 'aos/dist/aos.css'; \n\nconst App = () => {\n    AOS.init();\n    \n    return(\n    <BrowserRouter>\n        <div>\n        <Switch>\n            <Route exact path=\"/\">\n                <Homepage />\n            </Route>\n            <Route path=\"/login\">\n                <Homepage activeComponent=\"auth\" />\n            </Route>\n            <Route path=\"/register\">\n                <Homepage activeComponent=\"auth\" loginActive={false}/>\n            </Route>\n            <Route path=\"/dashboard\">\n                <div>\n                    <Dashboard defaultSelectedKey='1' />\n                </div>\n            </Route>\n            <Route path=\"/send\">\n                <div>\n                    <Dashboard defaultSelectedKey='1'/>\n                </div>\n            </Route>\n            <Route path=\"/groups\">\n                <div>\n                    <Dashboard defaultSelectedKey='2'/>\n                </div>\n            </Route>\n            <Route path=\"/recharge\">\n                <div>\n                    <Dashboard defaultSelectedKey='3'/>\n                </div>\n            </Route>\n        </Switch>\n        </div>\n    </BrowserRouter>\n    );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport dontenv from 'dotenv';\n\nimport store from './redux/store/store';\n\ndontenv.config();\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n            <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}